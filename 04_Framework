{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "참고 : \n",
    "* https://github.com/tensorflow/docs-l10n/blob/master/site/ko/tutorials/keras/classification.ipynb\n",
    "* https://archive.is/fY0FO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.3.0\n"
     ]
    }
   ],
   "source": [
    "# tensorflow와 tf.keras를 임포트합니다\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "\n",
    "# 헬퍼(helper) 라이브러리를 임포트합니다\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "fashion_mnist = keras.datasets.fashion_mnist\n",
    "\n",
    "(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* 이미지는 28x28 크기의 넘파이 배열이고 픽셀 값은 0과 255 사이입니다. 레이블(label)은 0에서 9까지의 정수 배열입니다. 이 값은 이미지에 있는 옷의 클래스(class)를 나타냅니다:\n",
    "\n",
    "\n",
    "* 레이블\t클래스\n",
    "```\n",
    "0\tT-shirt/top\n",
    "1\tTrouser\n",
    "2\tPullover\n",
    "3\tDress\n",
    "4\tCoat\n",
    "5\tSandal\n",
    "6\tShirt\n",
    "7\tSneaker\n",
    "8\tBag\n",
    "9\tAnkle boot\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n",
    "               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(60000, 28, 28)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_images.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 데이터 탐색"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "idx_to_draw = 5000 # 바꾸어보세요\n",
    "plt.imshow(train_images[idx_to_draw])\n",
    "\n",
    "lbl = train_labels[idx_to_draw]\n",
    "\n",
    "plt.title('#{} - {} {}'.format(idx_to_draw, lbl, class_names[lbl]))\n",
    "plt.colorbar()\n",
    "plt.grid(False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data 전처리"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "신경망 모델에 주입하기 전에 이 값의 범위를 0~1 사이로 조정하겠습니다. 이렇게 하려면 255로 나누어야 합니다. 훈련 세트와 테스트 세트를 동일한 방식으로 전처리하는 것이 중요합니다:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_images = train_images / 255.0\n",
    "\n",
    "test_images = test_images / 255.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 25 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,10))\n",
    "for i in range(25):\n",
    "    plt.subplot(5,5,i+1)\n",
    "    plt.xticks([])\n",
    "    plt.yticks([])\n",
    "    plt.grid(False)\n",
    "    plt.imshow(train_images[i], cmap=plt.cm.binary)\n",
    "    plt.xlabel(class_names[train_labels[i]])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### TDDO: 학습 코드를 위의 참조 url 을 이용하여 완성해보세요"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Vq7s15gULZdl"
   },
   "source": [
    "## AND Gate  with Keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tensorflow와 tf.keras를 임포트합니다\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.3.0'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 헬퍼(helper) 라이브러리를 임포트합니다\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "IoelahN_LZdr"
   },
   "outputs": [],
   "source": [
    "x_data = [[0, 0],\n",
    "          [0, 1],\n",
    "          [1, 0],\n",
    "          [1, 1]]\n",
    "\n",
    "y_data = [0,\n",
    "          0,\n",
    "          0,\n",
    "          1]\n",
    "\n",
    "#x_data = np.array([[1, 2], [1, 5], [2, 2], [3, 3.5], [7, 5], [9, 4], [8, 2]]) #training_points\n",
    "#y_data = [1, 1, 1, 1, 0, 0, 0]\n",
    "\n",
    "x_data = np.array(x_data, dtype=np.float32)\n",
    "y_data = np.array(y_data, dtype=np.float32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((4, 2), (4,))"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_data.shape, y_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7fd698632128>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_data[:, 0], x_data[:, 1], c=y_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras import layers\n",
    "from tensorflow.keras import activations\n",
    "from tensorflow.keras import optimizers\n",
    "from tensorflow.keras import models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "BDYUrlwjLZdu"
   },
   "outputs": [],
   "source": [
    "model = models.Sequential()\n",
    "model.add(layers.Dense(2, input_dim=2))\n",
    "model.add(layers.Activation('tanh'))\n",
    "model.add(layers.Dense(1))\n",
    "model.add(layers.Activation('sigmoid'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "7VDKvdsILZdx"
   },
   "outputs": [],
   "source": [
    "sgd = optimizers.SGD(lr=0.1)\n",
    "model.compile(loss='binary_crossentropy', optimizer=sgd, metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 301
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 2623,
     "status": "ok",
     "timestamp": 1592362188687,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "CTK36JUaLZd0",
    "outputId": "7feb840b-68da-423e-8730-6c235258bdc8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense (Dense)                (None, 2)                 6         \n",
      "_________________________________________________________________\n",
      "activation (Activation)      (None, 2)                 0         \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 1)                 3         \n",
      "_________________________________________________________________\n",
      "activation_1 (Activation)    (None, 1)                 0         \n",
      "=================================================================\n",
      "Total params: 9\n",
      "Trainable params: 9\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 533
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 3098,
     "status": "ok",
     "timestamp": 1592362189164,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "WdySYYryLZd3",
    "outputId": "83929205-5deb-44d8-a782-32ecc7b70e06"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from tensorflow.keras.utils import plot_model\n",
    "plot_model(model, to_file='model_and.png', show_shapes=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13026,
     "status": "ok",
     "timestamp": 1592362199098,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "2sgcfuNBLZd6",
    "outputId": "15596330-c896-4d2f-c2ed-032c9c5b03a8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7478 - accuracy: 0.7500\n",
      "Epoch 2/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7284 - accuracy: 0.5000\n",
      "Epoch 3/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7139 - accuracy: 0.7500\n",
      "Epoch 4/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7000 - accuracy: 0.7500\n",
      "Epoch 5/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6901 - accuracy: 0.7500\n",
      "Epoch 6/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6801 - accuracy: 0.7500\n",
      "Epoch 7/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6732 - accuracy: 0.7500\n",
      "Epoch 8/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6658 - accuracy: 0.7500\n",
      "Epoch 9/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6596 - accuracy: 0.7500\n",
      "Epoch 10/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6544 - accuracy: 0.7500\n",
      "Epoch 11/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6500 - accuracy: 0.7500\n",
      "Epoch 12/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6454 - accuracy: 0.7500\n",
      "Epoch 13/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6421 - accuracy: 0.7500\n",
      "Epoch 14/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6383 - accuracy: 0.7500\n",
      "Epoch 15/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6361 - accuracy: 0.7500\n",
      "Epoch 16/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6334 - accuracy: 0.7500\n",
      "Epoch 17/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6304 - accuracy: 0.7500\n",
      "Epoch 18/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6280 - accuracy: 0.7500\n",
      "Epoch 19/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6264 - accuracy: 0.7500\n",
      "Epoch 20/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6238 - accuracy: 0.7500\n",
      "Epoch 21/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6215 - accuracy: 0.7500\n",
      "Epoch 22/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6207 - accuracy: 0.7500\n",
      "Epoch 23/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6191 - accuracy: 0.7500\n",
      "Epoch 24/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6177 - accuracy: 0.7500\n",
      "Epoch 25/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6163 - accuracy: 0.7500\n",
      "Epoch 26/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6138 - accuracy: 0.7500\n",
      "Epoch 27/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6134 - accuracy: 0.7500\n",
      "Epoch 28/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6116 - accuracy: 0.7500\n",
      "Epoch 29/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6112 - accuracy: 0.7500\n",
      "Epoch 30/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6093 - accuracy: 0.7500\n",
      "Epoch 31/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6080 - accuracy: 0.7500\n",
      "Epoch 32/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6069 - accuracy: 0.7500\n",
      "Epoch 33/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6069 - accuracy: 0.7500\n",
      "Epoch 34/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6050 - accuracy: 0.7500\n",
      "Epoch 35/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6041 - accuracy: 0.7500\n",
      "Epoch 36/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6035 - accuracy: 0.7500\n",
      "Epoch 37/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6032 - accuracy: 0.7500\n",
      "Epoch 38/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6024 - accuracy: 0.7500\n",
      "Epoch 39/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6006 - accuracy: 0.7500\n",
      "Epoch 40/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6001 - accuracy: 0.7500\n",
      "Epoch 41/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5990 - accuracy: 0.7500\n",
      "Epoch 42/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5990 - accuracy: 0.7500\n",
      "Epoch 43/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5977 - accuracy: 0.7500\n",
      "Epoch 44/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5977 - accuracy: 0.7500\n",
      "Epoch 45/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5962 - accuracy: 0.7500\n",
      "Epoch 46/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5950 - accuracy: 0.7500\n",
      "Epoch 47/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5953 - accuracy: 0.7500\n",
      "Epoch 48/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5945 - accuracy: 0.7500\n",
      "Epoch 49/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5937 - accuracy: 0.7500\n",
      "Epoch 50/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5922 - accuracy: 0.7500\n",
      "Epoch 51/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5921 - accuracy: 0.7500\n",
      "Epoch 52/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5914 - accuracy: 0.7500\n",
      "Epoch 53/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5906 - accuracy: 0.7500\n",
      "Epoch 54/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5899 - accuracy: 0.7500\n",
      "Epoch 55/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5890 - accuracy: 0.7500\n",
      "Epoch 56/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5872 - accuracy: 0.7500\n",
      "Epoch 57/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5873 - accuracy: 0.7500\n",
      "Epoch 58/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5855 - accuracy: 0.7500\n",
      "Epoch 59/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5856 - accuracy: 0.7500\n",
      "Epoch 60/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5846 - accuracy: 0.7500\n",
      "Epoch 61/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5827 - accuracy: 0.7500\n",
      "Epoch 62/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5820 - accuracy: 0.7500\n",
      "Epoch 63/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5815 - accuracy: 0.7500\n",
      "Epoch 64/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5799 - accuracy: 0.7500\n",
      "Epoch 65/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5796 - accuracy: 0.7500\n",
      "Epoch 66/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5776 - accuracy: 0.7500\n",
      "Epoch 67/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5771 - accuracy: 0.7500\n",
      "Epoch 68/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5758 - accuracy: 0.7500\n",
      "Epoch 69/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5746 - accuracy: 0.7500\n",
      "Epoch 70/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5731 - accuracy: 0.7500\n",
      "Epoch 71/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5706 - accuracy: 0.7500\n",
      "Epoch 72/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5699 - accuracy: 0.7500\n",
      "Epoch 73/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5681 - accuracy: 0.7500\n",
      "Epoch 74/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5664 - accuracy: 0.7500\n",
      "Epoch 75/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5645 - accuracy: 0.7500\n",
      "Epoch 76/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5615 - accuracy: 0.7500\n",
      "Epoch 77/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5602 - accuracy: 0.7500\n",
      "Epoch 78/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5571 - accuracy: 0.7500\n",
      "Epoch 79/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5554 - accuracy: 0.7500\n",
      "Epoch 80/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5522 - accuracy: 0.7500\n",
      "Epoch 81/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5499 - accuracy: 0.7500\n",
      "Epoch 82/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5463 - accuracy: 0.7500\n",
      "Epoch 83/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5434 - accuracy: 0.7500\n",
      "Epoch 84/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5409 - accuracy: 0.7500\n",
      "Epoch 85/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5366 - accuracy: 0.7500\n",
      "Epoch 86/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5332 - accuracy: 0.7500\n",
      "Epoch 87/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5292 - accuracy: 0.7500\n",
      "Epoch 88/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5251 - accuracy: 0.7500\n",
      "Epoch 89/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5210 - accuracy: 0.7500\n",
      "Epoch 90/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5167 - accuracy: 0.7500\n",
      "Epoch 91/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5132 - accuracy: 0.7500\n",
      "Epoch 92/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5086 - accuracy: 0.7500\n",
      "Epoch 93/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5032 - accuracy: 0.7500\n",
      "Epoch 94/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4992 - accuracy: 0.7500\n",
      "Epoch 95/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4938 - accuracy: 0.7500\n",
      "Epoch 96/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4898 - accuracy: 0.7500\n",
      "Epoch 97/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4845 - accuracy: 0.7500\n",
      "Epoch 98/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4796 - accuracy: 0.7500\n",
      "Epoch 99/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4737 - accuracy: 0.7500\n",
      "Epoch 100/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4692 - accuracy: 0.7500\n",
      "Epoch 101/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4642 - accuracy: 0.7500\n",
      "Epoch 102/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4596 - accuracy: 0.7500\n",
      "Epoch 103/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4538 - accuracy: 0.7500\n",
      "Epoch 104/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4488 - accuracy: 0.7500\n",
      "Epoch 105/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4423 - accuracy: 0.7500\n",
      "Epoch 106/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4381 - accuracy: 0.7500\n",
      "Epoch 107/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4318 - accuracy: 0.7500\n",
      "Epoch 108/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4257 - accuracy: 0.7500\n",
      "Epoch 109/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4202 - accuracy: 0.7500\n",
      "Epoch 110/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4147 - accuracy: 0.7500\n",
      "Epoch 111/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4093 - accuracy: 0.7500\n",
      "Epoch 112/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4051 - accuracy: 0.7500\n",
      "Epoch 113/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3962 - accuracy: 0.7500\n",
      "Epoch 114/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3908 - accuracy: 0.7500\n",
      "Epoch 115/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3842 - accuracy: 0.7500\n",
      "Epoch 116/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3793 - accuracy: 0.7500\n",
      "Epoch 117/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3694 - accuracy: 0.7500\n",
      "Epoch 118/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3632 - accuracy: 0.7500\n",
      "Epoch 119/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3592 - accuracy: 0.7500\n",
      "Epoch 120/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3502 - accuracy: 0.7500\n",
      "Epoch 121/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3422 - accuracy: 0.7500\n",
      "Epoch 122/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3349 - accuracy: 0.7500\n",
      "Epoch 123/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3275 - accuracy: 1.0000\n",
      "Epoch 124/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3170 - accuracy: 1.0000\n",
      "Epoch 125/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3117 - accuracy: 0.7500\n",
      "Epoch 126/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3035 - accuracy: 0.7500\n",
      "Epoch 127/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2959 - accuracy: 0.7500\n",
      "Epoch 128/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2883 - accuracy: 1.0000\n",
      "Epoch 129/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2807 - accuracy: 1.0000\n",
      "Epoch 130/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2739 - accuracy: 1.0000\n",
      "Epoch 131/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2626 - accuracy: 1.0000\n",
      "Epoch 132/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2548 - accuracy: 1.0000\n",
      "Epoch 133/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2511 - accuracy: 1.0000\n",
      "Epoch 134/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2411 - accuracy: 1.0000\n",
      "Epoch 135/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2373 - accuracy: 1.0000\n",
      "Epoch 136/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2298 - accuracy: 1.0000\n",
      "Epoch 137/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2201 - accuracy: 1.0000\n",
      "Epoch 138/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2149 - accuracy: 1.0000\n",
      "Epoch 139/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2113 - accuracy: 1.0000\n",
      "Epoch 140/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2032 - accuracy: 1.0000\n",
      "Epoch 141/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1980 - accuracy: 1.0000\n",
      "Epoch 142/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1923 - accuracy: 1.0000\n",
      "Epoch 143/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1860 - accuracy: 1.0000\n",
      "Epoch 144/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1815 - accuracy: 1.0000\n",
      "Epoch 145/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1755 - accuracy: 1.0000\n",
      "Epoch 146/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1709 - accuracy: 1.0000\n",
      "Epoch 147/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1667 - accuracy: 1.0000\n",
      "Epoch 148/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1602 - accuracy: 1.0000\n",
      "Epoch 149/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1575 - accuracy: 1.0000\n",
      "Epoch 150/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1531 - accuracy: 1.0000\n",
      "Epoch 151/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1484 - accuracy: 1.0000\n",
      "Epoch 152/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1435 - accuracy: 1.0000\n",
      "Epoch 153/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1407 - accuracy: 1.0000\n",
      "Epoch 154/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1361 - accuracy: 1.0000\n",
      "Epoch 155/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1335 - accuracy: 1.0000\n",
      "Epoch 156/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1300 - accuracy: 1.0000\n",
      "Epoch 157/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1272 - accuracy: 1.0000\n",
      "Epoch 158/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1239 - accuracy: 1.0000\n",
      "Epoch 159/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1205 - accuracy: 1.0000\n",
      "Epoch 160/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1179 - accuracy: 1.0000\n",
      "Epoch 161/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1141 - accuracy: 1.0000\n",
      "Epoch 162/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1120 - accuracy: 1.0000\n",
      "Epoch 163/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1088 - accuracy: 1.0000\n",
      "Epoch 164/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1071 - accuracy: 1.0000\n",
      "Epoch 165/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1044 - accuracy: 1.0000\n",
      "Epoch 166/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1022 - accuracy: 1.0000\n",
      "Epoch 167/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0999 - accuracy: 1.0000\n",
      "Epoch 168/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0975 - accuracy: 1.0000\n",
      "Epoch 169/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0954 - accuracy: 1.0000\n",
      "Epoch 170/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0934 - accuracy: 1.0000\n",
      "Epoch 171/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0910 - accuracy: 1.0000\n",
      "Epoch 172/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0894 - accuracy: 1.0000\n",
      "Epoch 173/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0876 - accuracy: 1.0000\n",
      "Epoch 174/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0859 - accuracy: 1.0000\n",
      "Epoch 175/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0841 - accuracy: 1.0000\n",
      "Epoch 176/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0824 - accuracy: 1.0000\n",
      "Epoch 177/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0807 - accuracy: 1.0000\n",
      "Epoch 178/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0792 - accuracy: 1.0000\n",
      "Epoch 179/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0777 - accuracy: 1.0000\n",
      "Epoch 180/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0759 - accuracy: 1.0000\n",
      "Epoch 181/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0746 - accuracy: 1.0000\n",
      "Epoch 182/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0734 - accuracy: 1.0000\n",
      "Epoch 183/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0718 - accuracy: 1.0000\n",
      "Epoch 184/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0707 - accuracy: 1.0000\n",
      "Epoch 185/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0693 - accuracy: 1.0000\n",
      "Epoch 186/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0682 - accuracy: 1.0000\n",
      "Epoch 187/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0671 - accuracy: 1.0000\n",
      "Epoch 188/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0657 - accuracy: 1.0000\n",
      "Epoch 189/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0648 - accuracy: 1.0000\n",
      "Epoch 190/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0636 - accuracy: 1.0000\n",
      "Epoch 191/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0626 - accuracy: 1.0000\n",
      "Epoch 192/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0617 - accuracy: 1.0000\n",
      "Epoch 193/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0605 - accuracy: 1.0000\n",
      "Epoch 194/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0596 - accuracy: 1.0000\n",
      "Epoch 195/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0587 - accuracy: 1.0000\n",
      "Epoch 196/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0578 - accuracy: 1.0000\n",
      "Epoch 197/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0569 - accuracy: 1.0000\n",
      "Epoch 198/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0560 - accuracy: 1.0000\n",
      "Epoch 199/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0551 - accuracy: 1.0000\n",
      "Epoch 200/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0543 - accuracy: 1.0000\n",
      "Epoch 201/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0536 - accuracy: 1.0000\n",
      "Epoch 202/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0528 - accuracy: 1.0000\n",
      "Epoch 203/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0519 - accuracy: 1.0000\n",
      "Epoch 204/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0512 - accuracy: 1.0000\n",
      "Epoch 205/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0506 - accuracy: 1.0000\n",
      "Epoch 206/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0499 - accuracy: 1.0000\n",
      "Epoch 207/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0491 - accuracy: 1.0000\n",
      "Epoch 208/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0485 - accuracy: 1.0000\n",
      "Epoch 209/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0479 - accuracy: 1.0000\n",
      "Epoch 210/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0471 - accuracy: 1.0000\n",
      "Epoch 211/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0465 - accuracy: 1.0000\n",
      "Epoch 212/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0460 - accuracy: 1.0000\n",
      "Epoch 213/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0454 - accuracy: 1.0000\n",
      "Epoch 214/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0447 - accuracy: 1.0000\n",
      "Epoch 215/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0442 - accuracy: 1.0000\n",
      "Epoch 216/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0437 - accuracy: 1.0000\n",
      "Epoch 217/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0431 - accuracy: 1.0000\n",
      "Epoch 218/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0426 - accuracy: 1.0000\n",
      "Epoch 219/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0421 - accuracy: 1.0000\n",
      "Epoch 220/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0416 - accuracy: 1.0000\n",
      "Epoch 221/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0411 - accuracy: 1.0000\n",
      "Epoch 222/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0406 - accuracy: 1.0000\n",
      "Epoch 223/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0400 - accuracy: 1.0000\n",
      "Epoch 224/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0396 - accuracy: 1.0000\n",
      "Epoch 225/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0391 - accuracy: 1.0000\n",
      "Epoch 226/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0387 - accuracy: 1.0000\n",
      "Epoch 227/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0383 - accuracy: 1.0000\n",
      "Epoch 228/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0378 - accuracy: 1.0000\n",
      "Epoch 229/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0374 - accuracy: 1.0000\n",
      "Epoch 230/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0370 - accuracy: 1.0000\n",
      "Epoch 231/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0366 - accuracy: 1.0000\n",
      "Epoch 232/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0362 - accuracy: 1.0000\n",
      "Epoch 233/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0358 - accuracy: 1.0000\n",
      "Epoch 234/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0355 - accuracy: 1.0000\n",
      "Epoch 235/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0351 - accuracy: 1.0000\n",
      "Epoch 236/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0347 - accuracy: 1.0000\n",
      "Epoch 237/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0343 - accuracy: 1.0000\n",
      "Epoch 238/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0340 - accuracy: 1.0000\n",
      "Epoch 239/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0336 - accuracy: 1.0000\n",
      "Epoch 240/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0333 - accuracy: 1.0000\n",
      "Epoch 241/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0330 - accuracy: 1.0000\n",
      "Epoch 242/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0326 - accuracy: 1.0000\n",
      "Epoch 243/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0323 - accuracy: 1.0000\n",
      "Epoch 244/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0320 - accuracy: 1.0000\n",
      "Epoch 245/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0317 - accuracy: 1.0000\n",
      "Epoch 246/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0314 - accuracy: 1.0000\n",
      "Epoch 247/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0311 - accuracy: 1.0000\n",
      "Epoch 248/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0308 - accuracy: 1.0000\n",
      "Epoch 249/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0305 - accuracy: 1.0000\n",
      "Epoch 250/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0302 - accuracy: 1.0000\n",
      "Epoch 251/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0300 - accuracy: 1.0000\n",
      "Epoch 252/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0297 - accuracy: 1.0000\n",
      "Epoch 253/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0294 - accuracy: 1.0000\n",
      "Epoch 254/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0292 - accuracy: 1.0000\n",
      "Epoch 255/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0289 - accuracy: 1.0000\n",
      "Epoch 256/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0286 - accuracy: 1.0000\n",
      "Epoch 257/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0284 - accuracy: 1.0000\n",
      "Epoch 258/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0281 - accuracy: 1.0000\n",
      "Epoch 259/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0279 - accuracy: 1.0000\n",
      "Epoch 260/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0276 - accuracy: 1.0000\n",
      "Epoch 261/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0274 - accuracy: 1.0000\n",
      "Epoch 262/500\n",
      "4/4 [==============================] - 0s 3ms/step - loss: 0.0272 - accuracy: 1.0000\n",
      "Epoch 263/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0270 - accuracy: 1.0000\n",
      "Epoch 264/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0267 - accuracy: 1.0000\n",
      "Epoch 265/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0265 - accuracy: 1.0000\n",
      "Epoch 266/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0263 - accuracy: 1.0000\n",
      "Epoch 267/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0261 - accuracy: 1.0000\n",
      "Epoch 268/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0259 - accuracy: 1.0000\n",
      "Epoch 269/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0257 - accuracy: 1.0000\n",
      "Epoch 270/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0255 - accuracy: 1.0000\n",
      "Epoch 271/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0253 - accuracy: 1.0000\n",
      "Epoch 272/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0251 - accuracy: 1.0000\n",
      "Epoch 273/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0248 - accuracy: 1.0000\n",
      "Epoch 274/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0247 - accuracy: 1.0000\n",
      "Epoch 275/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0245 - accuracy: 1.0000\n",
      "Epoch 276/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0243 - accuracy: 1.0000\n",
      "Epoch 277/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0241 - accuracy: 1.0000\n",
      "Epoch 278/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0239 - accuracy: 1.0000\n",
      "Epoch 279/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0237 - accuracy: 1.0000\n",
      "Epoch 280/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0236 - accuracy: 1.0000\n",
      "Epoch 281/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0234 - accuracy: 1.0000\n",
      "Epoch 282/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0232 - accuracy: 1.0000\n",
      "Epoch 283/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0230 - accuracy: 1.0000\n",
      "Epoch 284/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0229 - accuracy: 1.0000\n",
      "Epoch 285/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0227 - accuracy: 1.0000\n",
      "Epoch 286/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0225 - accuracy: 1.0000\n",
      "Epoch 287/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0224 - accuracy: 1.0000\n",
      "Epoch 288/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0222 - accuracy: 1.0000\n",
      "Epoch 289/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0221 - accuracy: 1.0000\n",
      "Epoch 290/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0219 - accuracy: 1.0000\n",
      "Epoch 291/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0218 - accuracy: 1.0000\n",
      "Epoch 292/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0216 - accuracy: 1.0000\n",
      "Epoch 293/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0215 - accuracy: 1.0000\n",
      "Epoch 294/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0213 - accuracy: 1.0000\n",
      "Epoch 295/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0212 - accuracy: 1.0000\n",
      "Epoch 296/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0210 - accuracy: 1.0000\n",
      "Epoch 297/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0209 - accuracy: 1.0000\n",
      "Epoch 298/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0207 - accuracy: 1.0000\n",
      "Epoch 299/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0206 - accuracy: 1.0000\n",
      "Epoch 300/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0205 - accuracy: 1.0000\n",
      "Epoch 301/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0203 - accuracy: 1.0000\n",
      "Epoch 302/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0202 - accuracy: 1.0000\n",
      "Epoch 303/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0201 - accuracy: 1.0000\n",
      "Epoch 304/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0199 - accuracy: 1.0000\n",
      "Epoch 305/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0198 - accuracy: 1.0000\n",
      "Epoch 306/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0197 - accuracy: 1.0000\n",
      "Epoch 307/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0196 - accuracy: 1.0000\n",
      "Epoch 308/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0194 - accuracy: 1.0000\n",
      "Epoch 309/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0193 - accuracy: 1.0000\n",
      "Epoch 310/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0192 - accuracy: 1.0000\n",
      "Epoch 311/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0191 - accuracy: 1.0000\n",
      "Epoch 312/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0190 - accuracy: 1.0000\n",
      "Epoch 313/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0188 - accuracy: 1.0000\n",
      "Epoch 314/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0187 - accuracy: 1.0000\n",
      "Epoch 315/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0186 - accuracy: 1.0000\n",
      "Epoch 316/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0185 - accuracy: 1.0000\n",
      "Epoch 317/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0184 - accuracy: 1.0000\n",
      "Epoch 318/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0183 - accuracy: 1.0000\n",
      "Epoch 319/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0182 - accuracy: 1.0000\n",
      "Epoch 320/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0181 - accuracy: 1.0000\n",
      "Epoch 321/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0180 - accuracy: 1.0000\n",
      "Epoch 322/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0178 - accuracy: 1.0000\n",
      "Epoch 323/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0177 - accuracy: 1.0000\n",
      "Epoch 324/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0176 - accuracy: 1.0000\n",
      "Epoch 325/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0175 - accuracy: 1.0000\n",
      "Epoch 326/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0174 - accuracy: 1.0000\n",
      "Epoch 327/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0173 - accuracy: 1.0000\n",
      "Epoch 328/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0172 - accuracy: 1.0000\n",
      "Epoch 329/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0171 - accuracy: 1.0000\n",
      "Epoch 330/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0170 - accuracy: 1.0000\n",
      "Epoch 331/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0170 - accuracy: 1.0000\n",
      "Epoch 332/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0169 - accuracy: 1.0000\n",
      "Epoch 333/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0168 - accuracy: 1.0000\n",
      "Epoch 334/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0167 - accuracy: 1.0000\n",
      "Epoch 335/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0166 - accuracy: 1.0000\n",
      "Epoch 336/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0165 - accuracy: 1.0000\n",
      "Epoch 337/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0164 - accuracy: 1.0000\n",
      "Epoch 338/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0163 - accuracy: 1.0000\n",
      "Epoch 339/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0162 - accuracy: 1.0000\n",
      "Epoch 340/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0161 - accuracy: 1.0000\n",
      "Epoch 341/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0161 - accuracy: 1.0000\n",
      "Epoch 342/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0160 - accuracy: 1.0000\n",
      "Epoch 343/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0159 - accuracy: 1.0000\n",
      "Epoch 344/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0158 - accuracy: 1.0000\n",
      "Epoch 345/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0157 - accuracy: 1.0000\n",
      "Epoch 346/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0156 - accuracy: 1.0000\n",
      "Epoch 347/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0156 - accuracy: 1.0000\n",
      "Epoch 348/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0155 - accuracy: 1.0000\n",
      "Epoch 349/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0154 - accuracy: 1.0000\n",
      "Epoch 350/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0153 - accuracy: 1.0000\n",
      "Epoch 351/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0152 - accuracy: 1.0000\n",
      "Epoch 352/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0152 - accuracy: 1.0000\n",
      "Epoch 353/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0151 - accuracy: 1.0000\n",
      "Epoch 354/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0150 - accuracy: 1.0000\n",
      "Epoch 355/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0149 - accuracy: 1.0000\n",
      "Epoch 356/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0149 - accuracy: 1.0000\n",
      "Epoch 357/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0148 - accuracy: 1.0000\n",
      "Epoch 358/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0147 - accuracy: 1.0000\n",
      "Epoch 359/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0146 - accuracy: 1.0000\n",
      "Epoch 360/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0146 - accuracy: 1.0000\n",
      "Epoch 361/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0145 - accuracy: 1.0000\n",
      "Epoch 362/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0144 - accuracy: 1.0000\n",
      "Epoch 363/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0144 - accuracy: 1.0000\n",
      "Epoch 364/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0143 - accuracy: 1.0000\n",
      "Epoch 365/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0142 - accuracy: 1.0000\n",
      "Epoch 366/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0142 - accuracy: 1.0000\n",
      "Epoch 367/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0141 - accuracy: 1.0000\n",
      "Epoch 368/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0140 - accuracy: 1.0000\n",
      "Epoch 369/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0140 - accuracy: 1.0000\n",
      "Epoch 370/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0139 - accuracy: 1.0000\n",
      "Epoch 371/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0138 - accuracy: 1.0000\n",
      "Epoch 372/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0138 - accuracy: 1.0000\n",
      "Epoch 373/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0137 - accuracy: 1.0000\n",
      "Epoch 374/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0136 - accuracy: 1.0000\n",
      "Epoch 375/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0136 - accuracy: 1.0000\n",
      "Epoch 376/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0135 - accuracy: 1.0000\n",
      "Epoch 377/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0134 - accuracy: 1.0000\n",
      "Epoch 378/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0134 - accuracy: 1.0000\n",
      "Epoch 379/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0133 - accuracy: 1.0000\n",
      "Epoch 380/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0133 - accuracy: 1.0000\n",
      "Epoch 381/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0132 - accuracy: 1.0000\n",
      "Epoch 382/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0132 - accuracy: 1.0000\n",
      "Epoch 383/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0131 - accuracy: 1.0000\n",
      "Epoch 384/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0130 - accuracy: 1.0000\n",
      "Epoch 385/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0130 - accuracy: 1.0000\n",
      "Epoch 386/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0129 - accuracy: 1.0000\n",
      "Epoch 387/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0129 - accuracy: 1.0000\n",
      "Epoch 388/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0128 - accuracy: 1.0000\n",
      "Epoch 389/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0128 - accuracy: 1.0000\n",
      "Epoch 390/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0127 - accuracy: 1.0000\n",
      "Epoch 391/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0126 - accuracy: 1.0000\n",
      "Epoch 392/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0126 - accuracy: 1.0000\n",
      "Epoch 393/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0125 - accuracy: 1.0000\n",
      "Epoch 394/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0125 - accuracy: 1.0000\n",
      "Epoch 395/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0124 - accuracy: 1.0000\n",
      "Epoch 396/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0124 - accuracy: 1.0000\n",
      "Epoch 397/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0123 - accuracy: 1.0000\n",
      "Epoch 398/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0123 - accuracy: 1.0000\n",
      "Epoch 399/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0122 - accuracy: 1.0000\n",
      "Epoch 400/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0122 - accuracy: 1.0000\n",
      "Epoch 401/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0121 - accuracy: 1.0000\n",
      "Epoch 402/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0121 - accuracy: 1.0000\n",
      "Epoch 403/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0120 - accuracy: 1.0000\n",
      "Epoch 404/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0120 - accuracy: 1.0000\n",
      "Epoch 405/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0119 - accuracy: 1.0000\n",
      "Epoch 406/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0119 - accuracy: 1.0000\n",
      "Epoch 407/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0118 - accuracy: 1.0000\n",
      "Epoch 408/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0118 - accuracy: 1.0000\n",
      "Epoch 409/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0117 - accuracy: 1.0000\n",
      "Epoch 410/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0117 - accuracy: 1.0000\n",
      "Epoch 411/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0116 - accuracy: 1.0000\n",
      "Epoch 412/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0116 - accuracy: 1.0000\n",
      "Epoch 413/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0116 - accuracy: 1.0000\n",
      "Epoch 414/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0115 - accuracy: 1.0000\n",
      "Epoch 415/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0115 - accuracy: 1.0000\n",
      "Epoch 416/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0114 - accuracy: 1.0000\n",
      "Epoch 417/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0114 - accuracy: 1.0000\n",
      "Epoch 418/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0113 - accuracy: 1.0000\n",
      "Epoch 419/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0113 - accuracy: 1.0000\n",
      "Epoch 420/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0112 - accuracy: 1.0000\n",
      "Epoch 421/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0112 - accuracy: 1.0000\n",
      "Epoch 422/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0112 - accuracy: 1.0000\n",
      "Epoch 423/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0111 - accuracy: 1.0000\n",
      "Epoch 424/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0111 - accuracy: 1.0000\n",
      "Epoch 425/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0110 - accuracy: 1.0000\n",
      "Epoch 426/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0110 - accuracy: 1.0000\n",
      "Epoch 427/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0109 - accuracy: 1.0000\n",
      "Epoch 428/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0109 - accuracy: 1.0000\n",
      "Epoch 429/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0109 - accuracy: 1.0000\n",
      "Epoch 430/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0108 - accuracy: 1.0000\n",
      "Epoch 431/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0108 - accuracy: 1.0000\n",
      "Epoch 432/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0107 - accuracy: 1.0000\n",
      "Epoch 433/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0107 - accuracy: 1.0000\n",
      "Epoch 434/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0107 - accuracy: 1.0000\n",
      "Epoch 435/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0106 - accuracy: 1.0000\n",
      "Epoch 436/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0106 - accuracy: 1.0000\n",
      "Epoch 437/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0105 - accuracy: 1.0000\n",
      "Epoch 438/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0105 - accuracy: 1.0000\n",
      "Epoch 439/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0105 - accuracy: 1.0000\n",
      "Epoch 440/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0104 - accuracy: 1.0000\n",
      "Epoch 441/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0104 - accuracy: 1.0000\n",
      "Epoch 442/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0104 - accuracy: 1.0000\n",
      "Epoch 443/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0103 - accuracy: 1.0000\n",
      "Epoch 444/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0103 - accuracy: 1.0000\n",
      "Epoch 445/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0103 - accuracy: 1.0000\n",
      "Epoch 446/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0102 - accuracy: 1.0000\n",
      "Epoch 447/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0102 - accuracy: 1.0000\n",
      "Epoch 448/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0101 - accuracy: 1.0000\n",
      "Epoch 449/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0101 - accuracy: 1.0000\n",
      "Epoch 450/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0101 - accuracy: 1.0000\n",
      "Epoch 451/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0100 - accuracy: 1.0000\n",
      "Epoch 452/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0100 - accuracy: 1.0000\n",
      "Epoch 453/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0100 - accuracy: 1.0000\n",
      "Epoch 454/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0099 - accuracy: 1.0000\n",
      "Epoch 455/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0099 - accuracy: 1.0000\n",
      "Epoch 456/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0099 - accuracy: 1.0000\n",
      "Epoch 457/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0098 - accuracy: 1.0000\n",
      "Epoch 458/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0098 - accuracy: 1.0000\n",
      "Epoch 459/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0098 - accuracy: 1.0000\n",
      "Epoch 460/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0097 - accuracy: 1.0000\n",
      "Epoch 461/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0097 - accuracy: 1.0000\n",
      "Epoch 462/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0097 - accuracy: 1.0000\n",
      "Epoch 463/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0096 - accuracy: 1.0000\n",
      "Epoch 464/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0096 - accuracy: 1.0000\n",
      "Epoch 465/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0096 - accuracy: 1.0000\n",
      "Epoch 466/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0095 - accuracy: 1.0000\n",
      "Epoch 467/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0095 - accuracy: 1.0000\n",
      "Epoch 468/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0095 - accuracy: 1.0000\n",
      "Epoch 469/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0094 - accuracy: 1.0000\n",
      "Epoch 470/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0094 - accuracy: 1.0000\n",
      "Epoch 471/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0094 - accuracy: 1.0000\n",
      "Epoch 472/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0094 - accuracy: 1.0000\n",
      "Epoch 473/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0093 - accuracy: 1.0000\n",
      "Epoch 474/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0093 - accuracy: 1.0000\n",
      "Epoch 475/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0093 - accuracy: 1.0000\n",
      "Epoch 476/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0092 - accuracy: 1.0000\n",
      "Epoch 477/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0092 - accuracy: 1.0000\n",
      "Epoch 478/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0092 - accuracy: 1.0000\n",
      "Epoch 479/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0091 - accuracy: 1.0000\n",
      "Epoch 480/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0091 - accuracy: 1.0000\n",
      "Epoch 481/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0091 - accuracy: 1.0000\n",
      "Epoch 482/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0091 - accuracy: 1.0000\n",
      "Epoch 483/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0090 - accuracy: 1.0000\n",
      "Epoch 484/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0090 - accuracy: 1.0000\n",
      "Epoch 485/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0090 - accuracy: 1.0000\n",
      "Epoch 486/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0089 - accuracy: 1.0000\n",
      "Epoch 487/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0089 - accuracy: 1.0000\n",
      "Epoch 488/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0089 - accuracy: 1.0000\n",
      "Epoch 489/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0089 - accuracy: 1.0000\n",
      "Epoch 490/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0088 - accuracy: 1.0000\n",
      "Epoch 491/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0088 - accuracy: 1.0000\n",
      "Epoch 492/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0088 - accuracy: 1.0000\n",
      "Epoch 493/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0088 - accuracy: 1.0000\n",
      "Epoch 494/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0087 - accuracy: 1.0000\n",
      "Epoch 495/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0087 - accuracy: 1.0000\n",
      "Epoch 496/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0087 - accuracy: 1.0000\n",
      "Epoch 497/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0087 - accuracy: 1.0000\n",
      "Epoch 498/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0086 - accuracy: 1.0000\n",
      "Epoch 499/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0086 - accuracy: 1.0000\n",
      "Epoch 500/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0086 - accuracy: 1.0000\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(x_data, y_data,  batch_size=1, epochs=500)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 학습 결과 그려보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'epoch')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['loss'])\n",
    "plt.title('Loss')\n",
    "plt.xlabel('epoch')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'epoch')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['accuracy'])\n",
    "plt.title('Training accuracy')\n",
    "plt.xlabel('epoch')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  확률 찍어보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 87
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13021,
     "status": "ok",
     "timestamp": 1592362199099,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "N-TJgCw2LZd9",
    "outputId": "b3f99310-3279-45ea-e9c5-169b54903717"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.00160408]\n",
      " [0.00765025]\n",
      " [0.00767472]\n",
      " [0.98312855]]\n"
     ]
    }
   ],
   "source": [
    "hypothesis = model.predict(x_data)\n",
    "print(hypothesis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 87
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13015,
     "status": "ok",
     "timestamp": 1592362199099,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "8Rv3IPOWLZeA",
    "outputId": "04b84803-254d-4257-dc78-1af190fb040f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[False]\n",
      " [False]\n",
      " [False]\n",
      " [ True]]\n"
     ]
    }
   ],
   "source": [
    "predicted = hypothesis > 0.5\n",
    "print(predicted)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "10_4_XOR_keras.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Vq7s15gULZdl"
   },
   "source": [
    "## AND Gate  with Keras"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* 1학기때 SVM 을 이용해서 분류했던 예를 신경망 구조로 해결하는 방법입니다.\n",
    "\n",
    "참고 : https://github.com/dalek7/Undergrad-AI-2020SPring/blob/master/05_SVM_simple.ipynb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tensorflow와 tf.keras를 임포트합니다\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.3.0'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 헬퍼(helper) 라이브러리를 임포트합니다\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "IoelahN_LZdr"
   },
   "outputs": [],
   "source": [
    "x_data = np.array([[1, 2], [1, 5], [2, 2], [3, 3.5], [7, 5], [9, 4], [8, 2]]) #training_points\n",
    "y_data = [1, 1, 1, 1, 0, 0, 0]\n",
    "\n",
    "x_data = np.array(x_data, dtype=np.float32)\n",
    "y_data = np.array(y_data, dtype=np.float32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f12589d1d68>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_data[:, 0], x_data[:, 1], c=y_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras import layers\n",
    "from tensorflow.keras import activations\n",
    "from tensorflow.keras import optimizers\n",
    "from tensorflow.keras import models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "BDYUrlwjLZdu"
   },
   "outputs": [],
   "source": [
    "model = models.Sequential()\n",
    "model.add(layers.Dense(2, input_dim=2))\n",
    "model.add(layers.Activation('tanh'))\n",
    "model.add(layers.Dense(1))\n",
    "model.add(layers.Activation('sigmoid'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "7VDKvdsILZdx"
   },
   "outputs": [],
   "source": [
    "sgd = optimizers.SGD(lr=0.1)\n",
    "model.compile(loss='binary_crossentropy', optimizer=sgd, metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 301
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 2623,
     "status": "ok",
     "timestamp": 1592362188687,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "CTK36JUaLZd0",
    "outputId": "7feb840b-68da-423e-8730-6c235258bdc8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense (Dense)                (None, 2)                 6         \n",
      "_________________________________________________________________\n",
      "activation (Activation)      (None, 2)                 0         \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 1)                 3         \n",
      "_________________________________________________________________\n",
      "activation_1 (Activation)    (None, 1)                 0         \n",
      "=================================================================\n",
      "Total params: 9\n",
      "Trainable params: 9\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 533
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 3098,
     "status": "ok",
     "timestamp": 1592362189164,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "WdySYYryLZd3",
    "outputId": "83929205-5deb-44d8-a782-32ecc7b70e06"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from tensorflow.keras.utils import plot_model\n",
    "plot_model(model, to_file='model_and.png', show_shapes=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13026,
     "status": "ok",
     "timestamp": 1592362199098,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "2sgcfuNBLZd6",
    "outputId": "15596330-c896-4d2f-c2ed-032c9c5b03a8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.4295 - accuracy: 0.8571\n",
      "Epoch 2/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.5091 - accuracy: 0.7143\n",
      "Epoch 3/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.3506 - accuracy: 0.8571\n",
      "Epoch 4/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.3576 - accuracy: 0.8571\n",
      "Epoch 5/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.4508 - accuracy: 0.7143\n",
      "Epoch 6/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.2237 - accuracy: 1.0000\n",
      "Epoch 7/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.2290 - accuracy: 1.0000\n",
      "Epoch 8/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.1981 - accuracy: 1.0000\n",
      "Epoch 9/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1793 - accuracy: 1.0000\n",
      "Epoch 10/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.1783 - accuracy: 1.0000\n",
      "Epoch 11/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1491 - accuracy: 1.0000\n",
      "Epoch 12/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1538 - accuracy: 1.0000\n",
      "Epoch 13/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1163 - accuracy: 1.0000\n",
      "Epoch 14/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1108 - accuracy: 1.0000\n",
      "Epoch 15/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1064 - accuracy: 1.0000\n",
      "Epoch 16/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.1043 - accuracy: 1.0000\n",
      "Epoch 17/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0931 - accuracy: 1.0000\n",
      "Epoch 18/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0880 - accuracy: 1.0000\n",
      "Epoch 19/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0839 - accuracy: 1.0000\n",
      "Epoch 20/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0795 - accuracy: 1.0000\n",
      "Epoch 21/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0753 - accuracy: 1.0000\n",
      "Epoch 22/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0721 - accuracy: 1.0000\n",
      "Epoch 23/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0690 - accuracy: 1.0000\n",
      "Epoch 24/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0667 - accuracy: 1.0000\n",
      "Epoch 25/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0641 - accuracy: 1.0000\n",
      "Epoch 26/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0609 - accuracy: 1.0000\n",
      "Epoch 27/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0591 - accuracy: 1.0000\n",
      "Epoch 28/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0566 - accuracy: 1.0000\n",
      "Epoch 29/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0548 - accuracy: 1.0000\n",
      "Epoch 30/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0530 - accuracy: 1.0000\n",
      "Epoch 31/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0512 - accuracy: 1.0000\n",
      "Epoch 32/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0497 - accuracy: 1.0000\n",
      "Epoch 33/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0484 - accuracy: 1.0000\n",
      "Epoch 34/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0465 - accuracy: 1.0000\n",
      "Epoch 35/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0454 - accuracy: 1.0000\n",
      "Epoch 36/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0438 - accuracy: 1.0000\n",
      "Epoch 37/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0428 - accuracy: 1.0000\n",
      "Epoch 38/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0416 - accuracy: 1.0000\n",
      "Epoch 39/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0406 - accuracy: 1.0000\n",
      "Epoch 40/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0396 - accuracy: 1.0000\n",
      "Epoch 41/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0384 - accuracy: 1.0000\n",
      "Epoch 42/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0375 - accuracy: 1.0000\n",
      "Epoch 43/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0368 - accuracy: 1.0000\n",
      "Epoch 44/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0358 - accuracy: 1.0000\n",
      "Epoch 45/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0350 - accuracy: 1.0000\n",
      "Epoch 46/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0341 - accuracy: 1.0000\n",
      "Epoch 47/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0334 - accuracy: 1.0000\n",
      "Epoch 48/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0327 - accuracy: 1.0000\n",
      "Epoch 49/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0321 - accuracy: 1.0000\n",
      "Epoch 50/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0314 - accuracy: 1.0000\n",
      "Epoch 51/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0307 - accuracy: 1.0000\n",
      "Epoch 52/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0301 - accuracy: 1.0000\n",
      "Epoch 53/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0295 - accuracy: 1.0000\n",
      "Epoch 54/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0290 - accuracy: 1.0000\n",
      "Epoch 55/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0285 - accuracy: 1.0000\n",
      "Epoch 56/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0279 - accuracy: 1.0000\n",
      "Epoch 57/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0274 - accuracy: 1.0000\n",
      "Epoch 58/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0269 - accuracy: 1.0000\n",
      "Epoch 59/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0264 - accuracy: 1.0000\n",
      "Epoch 60/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0260 - accuracy: 1.0000\n",
      "Epoch 61/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0255 - accuracy: 1.0000\n",
      "Epoch 62/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0251 - accuracy: 1.0000\n",
      "Epoch 63/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0247 - accuracy: 1.0000\n",
      "Epoch 64/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0243 - accuracy: 1.0000\n",
      "Epoch 65/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0239 - accuracy: 1.0000\n",
      "Epoch 66/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0235 - accuracy: 1.0000\n",
      "Epoch 67/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0231 - accuracy: 1.0000\n",
      "Epoch 68/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0228 - accuracy: 1.0000\n",
      "Epoch 69/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0224 - accuracy: 1.0000\n",
      "Epoch 70/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0221 - accuracy: 1.0000\n",
      "Epoch 71/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0218 - accuracy: 1.0000\n",
      "Epoch 72/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0215 - accuracy: 1.0000\n",
      "Epoch 73/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0212 - accuracy: 1.0000\n",
      "Epoch 74/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0208 - accuracy: 1.0000\n",
      "Epoch 75/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0205 - accuracy: 1.0000\n",
      "Epoch 76/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0203 - accuracy: 1.0000\n",
      "Epoch 77/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0200 - accuracy: 1.0000\n",
      "Epoch 78/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0197 - accuracy: 1.0000\n",
      "Epoch 79/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0195 - accuracy: 1.0000\n",
      "Epoch 80/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0192 - accuracy: 1.0000\n",
      "Epoch 81/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0189 - accuracy: 1.0000\n",
      "Epoch 82/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0187 - accuracy: 1.0000\n",
      "Epoch 83/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0185 - accuracy: 1.0000\n",
      "Epoch 84/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0183 - accuracy: 1.0000\n",
      "Epoch 85/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0180 - accuracy: 1.0000\n",
      "Epoch 86/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0178 - accuracy: 1.0000\n",
      "Epoch 87/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0176 - accuracy: 1.0000\n",
      "Epoch 88/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0174 - accuracy: 1.0000\n",
      "Epoch 89/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0172 - accuracy: 1.0000\n",
      "Epoch 90/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0170 - accuracy: 1.0000\n",
      "Epoch 91/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0168 - accuracy: 1.0000\n",
      "Epoch 92/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0166 - accuracy: 1.0000\n",
      "Epoch 93/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0164 - accuracy: 1.0000\n",
      "Epoch 94/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0162 - accuracy: 1.0000\n",
      "Epoch 95/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0160 - accuracy: 1.0000\n",
      "Epoch 96/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0158 - accuracy: 1.0000\n",
      "Epoch 97/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0157 - accuracy: 1.0000\n",
      "Epoch 98/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0155 - accuracy: 1.0000\n",
      "Epoch 99/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0153 - accuracy: 1.0000\n",
      "Epoch 100/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0152 - accuracy: 1.0000\n",
      "Epoch 101/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0150 - accuracy: 1.0000\n",
      "Epoch 102/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0149 - accuracy: 1.0000\n",
      "Epoch 103/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0147 - accuracy: 1.0000\n",
      "Epoch 104/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0146 - accuracy: 1.0000\n",
      "Epoch 105/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0144 - accuracy: 1.0000\n",
      "Epoch 106/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0143 - accuracy: 1.0000\n",
      "Epoch 107/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0141 - accuracy: 1.0000\n",
      "Epoch 108/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0140 - accuracy: 1.0000\n",
      "Epoch 109/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0139 - accuracy: 1.0000\n",
      "Epoch 110/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0137 - accuracy: 1.0000\n",
      "Epoch 111/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0136 - accuracy: 1.0000\n",
      "Epoch 112/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0135 - accuracy: 1.0000\n",
      "Epoch 113/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0133 - accuracy: 1.0000\n",
      "Epoch 114/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0132 - accuracy: 1.0000\n",
      "Epoch 115/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0131 - accuracy: 1.0000\n",
      "Epoch 116/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0130 - accuracy: 1.0000\n",
      "Epoch 117/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0128 - accuracy: 1.0000\n",
      "Epoch 118/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0127 - accuracy: 1.0000\n",
      "Epoch 119/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0126 - accuracy: 1.0000\n",
      "Epoch 120/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0125 - accuracy: 1.0000\n",
      "Epoch 121/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0124 - accuracy: 1.0000\n",
      "Epoch 122/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0123 - accuracy: 1.0000\n",
      "Epoch 123/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0122 - accuracy: 1.0000\n",
      "Epoch 124/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0121 - accuracy: 1.0000\n",
      "Epoch 125/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0120 - accuracy: 1.0000\n",
      "Epoch 126/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0119 - accuracy: 1.0000\n",
      "Epoch 127/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0118 - accuracy: 1.0000\n",
      "Epoch 128/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0117 - accuracy: 1.0000\n",
      "Epoch 129/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0116 - accuracy: 1.0000\n",
      "Epoch 130/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0115 - accuracy: 1.0000\n",
      "Epoch 131/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0114 - accuracy: 1.0000\n",
      "Epoch 132/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0113 - accuracy: 1.0000\n",
      "Epoch 133/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0112 - accuracy: 1.0000\n",
      "Epoch 134/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0111 - accuracy: 1.0000\n",
      "Epoch 135/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0110 - accuracy: 1.0000\n",
      "Epoch 136/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0109 - accuracy: 1.0000\n",
      "Epoch 137/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0108 - accuracy: 1.0000\n",
      "Epoch 138/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0108 - accuracy: 1.0000\n",
      "Epoch 139/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0107 - accuracy: 1.0000\n",
      "Epoch 140/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0106 - accuracy: 1.0000\n",
      "Epoch 141/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0105 - accuracy: 1.0000\n",
      "Epoch 142/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0104 - accuracy: 1.0000\n",
      "Epoch 143/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0104 - accuracy: 1.0000\n",
      "Epoch 144/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0103 - accuracy: 1.0000\n",
      "Epoch 145/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0102 - accuracy: 1.0000\n",
      "Epoch 146/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0101 - accuracy: 1.0000\n",
      "Epoch 147/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0101 - accuracy: 1.0000\n",
      "Epoch 148/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0100 - accuracy: 1.0000\n",
      "Epoch 149/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0099 - accuracy: 1.0000\n",
      "Epoch 150/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0098 - accuracy: 1.0000\n",
      "Epoch 151/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0098 - accuracy: 1.0000\n",
      "Epoch 152/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0097 - accuracy: 1.0000\n",
      "Epoch 153/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0096 - accuracy: 1.0000\n",
      "Epoch 154/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0096 - accuracy: 1.0000\n",
      "Epoch 155/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0095 - accuracy: 1.0000\n",
      "Epoch 156/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0094 - accuracy: 1.0000\n",
      "Epoch 157/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0094 - accuracy: 1.0000\n",
      "Epoch 158/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0093 - accuracy: 1.0000\n",
      "Epoch 159/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0092 - accuracy: 1.0000\n",
      "Epoch 160/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0092 - accuracy: 1.0000\n",
      "Epoch 161/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0091 - accuracy: 1.0000\n",
      "Epoch 162/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0091 - accuracy: 1.0000\n",
      "Epoch 163/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0090 - accuracy: 1.0000\n",
      "Epoch 164/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0089 - accuracy: 1.0000\n",
      "Epoch 165/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0089 - accuracy: 1.0000\n",
      "Epoch 166/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0088 - accuracy: 1.0000\n",
      "Epoch 167/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0088 - accuracy: 1.0000\n",
      "Epoch 168/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0087 - accuracy: 1.0000\n",
      "Epoch 169/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0086 - accuracy: 1.0000\n",
      "Epoch 170/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0086 - accuracy: 1.0000\n",
      "Epoch 171/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0085 - accuracy: 1.0000\n",
      "Epoch 172/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0085 - accuracy: 1.0000\n",
      "Epoch 173/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0084 - accuracy: 1.0000\n",
      "Epoch 174/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0084 - accuracy: 1.0000\n",
      "Epoch 175/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0083 - accuracy: 1.0000\n",
      "Epoch 176/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0083 - accuracy: 1.0000\n",
      "Epoch 177/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0082 - accuracy: 1.0000\n",
      "Epoch 178/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0082 - accuracy: 1.0000\n",
      "Epoch 179/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0081 - accuracy: 1.0000\n",
      "Epoch 180/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0081 - accuracy: 1.0000\n",
      "Epoch 181/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0080 - accuracy: 1.0000\n",
      "Epoch 182/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0080 - accuracy: 1.0000\n",
      "Epoch 183/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0079 - accuracy: 1.0000\n",
      "Epoch 184/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0079 - accuracy: 1.0000\n",
      "Epoch 185/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0078 - accuracy: 1.0000\n",
      "Epoch 186/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0078 - accuracy: 1.0000\n",
      "Epoch 187/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0077 - accuracy: 1.0000\n",
      "Epoch 188/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0077 - accuracy: 1.0000\n",
      "Epoch 189/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0077 - accuracy: 1.0000\n",
      "Epoch 190/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0076 - accuracy: 1.0000\n",
      "Epoch 191/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0076 - accuracy: 1.0000\n",
      "Epoch 192/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0075 - accuracy: 1.0000\n",
      "Epoch 193/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0075 - accuracy: 1.0000\n",
      "Epoch 194/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0074 - accuracy: 1.0000\n",
      "Epoch 195/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0074 - accuracy: 1.0000\n",
      "Epoch 196/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0074 - accuracy: 1.0000\n",
      "Epoch 197/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0073 - accuracy: 1.0000\n",
      "Epoch 198/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0073 - accuracy: 1.0000\n",
      "Epoch 199/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0072 - accuracy: 1.0000\n",
      "Epoch 200/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0072 - accuracy: 1.0000\n",
      "Epoch 201/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0072 - accuracy: 1.0000\n",
      "Epoch 202/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0071 - accuracy: 1.0000\n",
      "Epoch 203/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0071 - accuracy: 1.0000\n",
      "Epoch 204/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0070 - accuracy: 1.0000\n",
      "Epoch 205/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0070 - accuracy: 1.0000\n",
      "Epoch 206/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0070 - accuracy: 1.0000\n",
      "Epoch 207/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0069 - accuracy: 1.0000\n",
      "Epoch 208/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0069 - accuracy: 1.0000\n",
      "Epoch 209/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0069 - accuracy: 1.0000\n",
      "Epoch 210/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0068 - accuracy: 1.0000\n",
      "Epoch 211/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0068 - accuracy: 1.0000\n",
      "Epoch 212/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0067 - accuracy: 1.0000\n",
      "Epoch 213/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0067 - accuracy: 1.0000\n",
      "Epoch 214/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0067 - accuracy: 1.0000\n",
      "Epoch 215/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0066 - accuracy: 1.0000\n",
      "Epoch 216/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0066 - accuracy: 1.0000\n",
      "Epoch 217/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0066 - accuracy: 1.0000\n",
      "Epoch 218/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0065 - accuracy: 1.0000\n",
      "Epoch 219/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0065 - accuracy: 1.0000\n",
      "Epoch 220/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0065 - accuracy: 1.0000\n",
      "Epoch 221/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0064 - accuracy: 1.0000\n",
      "Epoch 222/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0064 - accuracy: 1.0000\n",
      "Epoch 223/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0064 - accuracy: 1.0000\n",
      "Epoch 224/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0063 - accuracy: 1.0000\n",
      "Epoch 225/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0063 - accuracy: 1.0000\n",
      "Epoch 226/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0063 - accuracy: 1.0000\n",
      "Epoch 227/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0062 - accuracy: 1.0000\n",
      "Epoch 228/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0062 - accuracy: 1.0000\n",
      "Epoch 229/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0062 - accuracy: 1.0000\n",
      "Epoch 230/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0062 - accuracy: 1.0000\n",
      "Epoch 231/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0061 - accuracy: 1.0000\n",
      "Epoch 232/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0061 - accuracy: 1.0000\n",
      "Epoch 233/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0061 - accuracy: 1.0000\n",
      "Epoch 234/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0060 - accuracy: 1.0000\n",
      "Epoch 235/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0060 - accuracy: 1.0000\n",
      "Epoch 236/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0060 - accuracy: 1.0000\n",
      "Epoch 237/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0060 - accuracy: 1.0000\n",
      "Epoch 238/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0059 - accuracy: 1.0000\n",
      "Epoch 239/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0059 - accuracy: 1.0000\n",
      "Epoch 240/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0059 - accuracy: 1.0000\n",
      "Epoch 241/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0058 - accuracy: 1.0000\n",
      "Epoch 242/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0058 - accuracy: 1.0000\n",
      "Epoch 243/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0058 - accuracy: 1.0000\n",
      "Epoch 244/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0058 - accuracy: 1.0000\n",
      "Epoch 245/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0057 - accuracy: 1.0000\n",
      "Epoch 246/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0057 - accuracy: 1.0000\n",
      "Epoch 247/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0057 - accuracy: 1.0000\n",
      "Epoch 248/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0057 - accuracy: 1.0000\n",
      "Epoch 249/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0056 - accuracy: 1.0000\n",
      "Epoch 250/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0056 - accuracy: 1.0000\n",
      "Epoch 251/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0056 - accuracy: 1.0000\n",
      "Epoch 252/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0056 - accuracy: 1.0000\n",
      "Epoch 253/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0055 - accuracy: 1.0000\n",
      "Epoch 254/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0055 - accuracy: 1.0000\n",
      "Epoch 255/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0055 - accuracy: 1.0000\n",
      "Epoch 256/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0055 - accuracy: 1.0000\n",
      "Epoch 257/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0054 - accuracy: 1.0000\n",
      "Epoch 258/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0054 - accuracy: 1.0000\n",
      "Epoch 259/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0054 - accuracy: 1.0000\n",
      "Epoch 260/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0054 - accuracy: 1.0000\n",
      "Epoch 261/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0053 - accuracy: 1.0000\n",
      "Epoch 262/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0053 - accuracy: 1.0000\n",
      "Epoch 263/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0053 - accuracy: 1.0000\n",
      "Epoch 264/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0053 - accuracy: 1.0000\n",
      "Epoch 265/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0052 - accuracy: 1.0000\n",
      "Epoch 266/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0052 - accuracy: 1.0000\n",
      "Epoch 267/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0052 - accuracy: 1.0000\n",
      "Epoch 268/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0052 - accuracy: 1.0000\n",
      "Epoch 269/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0051 - accuracy: 1.0000\n",
      "Epoch 270/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0051 - accuracy: 1.0000\n",
      "Epoch 271/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0051 - accuracy: 1.0000\n",
      "Epoch 272/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0051 - accuracy: 1.0000\n",
      "Epoch 273/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0051 - accuracy: 1.0000\n",
      "Epoch 274/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0050 - accuracy: 1.0000\n",
      "Epoch 275/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0050 - accuracy: 1.0000\n",
      "Epoch 276/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0050 - accuracy: 1.0000\n",
      "Epoch 277/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0050 - accuracy: 1.0000\n",
      "Epoch 278/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0050 - accuracy: 1.0000\n",
      "Epoch 279/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0049 - accuracy: 1.0000\n",
      "Epoch 280/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0049 - accuracy: 1.0000\n",
      "Epoch 281/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0049 - accuracy: 1.0000\n",
      "Epoch 282/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0049 - accuracy: 1.0000\n",
      "Epoch 283/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0048 - accuracy: 1.0000\n",
      "Epoch 284/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0048 - accuracy: 1.0000\n",
      "Epoch 285/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0048 - accuracy: 1.0000\n",
      "Epoch 286/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0048 - accuracy: 1.0000\n",
      "Epoch 287/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0048 - accuracy: 1.0000\n",
      "Epoch 288/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0047 - accuracy: 1.0000\n",
      "Epoch 289/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0047 - accuracy: 1.0000\n",
      "Epoch 290/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0047 - accuracy: 1.0000\n",
      "Epoch 291/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0047 - accuracy: 1.0000\n",
      "Epoch 292/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0047 - accuracy: 1.0000\n",
      "Epoch 293/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0047 - accuracy: 1.0000\n",
      "Epoch 294/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0046 - accuracy: 1.0000\n",
      "Epoch 295/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0046 - accuracy: 1.0000\n",
      "Epoch 296/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0046 - accuracy: 1.0000\n",
      "Epoch 297/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0046 - accuracy: 1.0000\n",
      "Epoch 298/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0046 - accuracy: 1.0000\n",
      "Epoch 299/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0045 - accuracy: 1.0000\n",
      "Epoch 300/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0045 - accuracy: 1.0000\n",
      "Epoch 301/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0045 - accuracy: 1.0000\n",
      "Epoch 302/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0045 - accuracy: 1.0000\n",
      "Epoch 303/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0045 - accuracy: 1.0000\n",
      "Epoch 304/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0044 - accuracy: 1.0000\n",
      "Epoch 305/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0044 - accuracy: 1.0000\n",
      "Epoch 306/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0044 - accuracy: 1.0000\n",
      "Epoch 307/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0044 - accuracy: 1.0000\n",
      "Epoch 308/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0044 - accuracy: 1.0000\n",
      "Epoch 309/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0044 - accuracy: 1.0000\n",
      "Epoch 310/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0043 - accuracy: 1.0000\n",
      "Epoch 311/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0043 - accuracy: 1.0000\n",
      "Epoch 312/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0043 - accuracy: 1.0000\n",
      "Epoch 313/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0043 - accuracy: 1.0000\n",
      "Epoch 314/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0043 - accuracy: 1.0000\n",
      "Epoch 315/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0043 - accuracy: 1.0000\n",
      "Epoch 316/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0042 - accuracy: 1.0000\n",
      "Epoch 317/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0042 - accuracy: 1.0000\n",
      "Epoch 318/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0042 - accuracy: 1.0000\n",
      "Epoch 319/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0042 - accuracy: 1.0000\n",
      "Epoch 320/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0042 - accuracy: 1.0000\n",
      "Epoch 321/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 322/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 323/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 324/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 325/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 326/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 327/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0041 - accuracy: 1.0000\n",
      "Epoch 328/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0040 - accuracy: 1.0000\n",
      "Epoch 329/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0040 - accuracy: 1.0000\n",
      "Epoch 330/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0040 - accuracy: 1.0000\n",
      "Epoch 331/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0040 - accuracy: 1.0000\n",
      "Epoch 332/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0040 - accuracy: 1.0000\n",
      "Epoch 333/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0040 - accuracy: 1.0000\n",
      "Epoch 334/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0039 - accuracy: 1.0000\n",
      "Epoch 335/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0039 - accuracy: 1.0000\n",
      "Epoch 336/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0039 - accuracy: 1.0000\n",
      "Epoch 337/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0039 - accuracy: 1.0000\n",
      "Epoch 338/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0039 - accuracy: 1.0000\n",
      "Epoch 339/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0039 - accuracy: 1.0000\n",
      "Epoch 340/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 341/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 342/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 343/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 344/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 345/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 346/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0038 - accuracy: 1.0000\n",
      "Epoch 347/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 348/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 349/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 350/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 351/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 352/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 353/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0037 - accuracy: 1.0000\n",
      "Epoch 354/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 355/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 356/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 357/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 358/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 359/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 360/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0036 - accuracy: 1.0000\n",
      "Epoch 361/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 362/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 363/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 364/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 365/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 366/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 367/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0035 - accuracy: 1.0000\n",
      "Epoch 368/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 369/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 370/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 371/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 372/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 373/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 374/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 375/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0034 - accuracy: 1.0000\n",
      "Epoch 376/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 377/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 378/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 379/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 380/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 381/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 382/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0033 - accuracy: 1.0000\n",
      "Epoch 383/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 384/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 385/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 386/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 387/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 388/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 389/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 390/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 391/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0032 - accuracy: 1.0000\n",
      "Epoch 392/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 393/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 394/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 395/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 396/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 397/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 398/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 399/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0031 - accuracy: 1.0000\n",
      "Epoch 400/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 401/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 402/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 403/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 404/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 405/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 406/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 407/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 408/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0030 - accuracy: 1.0000\n",
      "Epoch 409/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 410/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 411/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 412/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 413/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 414/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 415/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 416/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 417/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 418/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0029 - accuracy: 1.0000\n",
      "Epoch 419/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 420/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 421/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 422/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 423/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 424/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 425/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 426/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 427/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 428/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0028 - accuracy: 1.0000\n",
      "Epoch 429/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 430/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 431/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 432/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 433/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 434/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 435/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 436/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 437/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 438/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 439/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0027 - accuracy: 1.0000\n",
      "Epoch 440/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 441/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 442/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 443/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 444/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 445/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 446/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 447/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 448/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 449/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 450/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0026 - accuracy: 1.0000\n",
      "Epoch 451/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 452/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 453/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 454/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 455/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 456/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 457/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 458/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 459/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 460/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 461/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 462/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 463/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0025 - accuracy: 1.0000\n",
      "Epoch 464/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 465/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 466/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 467/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 468/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 469/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 470/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 471/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 472/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 473/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 474/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 475/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 476/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 477/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 478/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0024 - accuracy: 1.0000\n",
      "Epoch 479/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 480/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 481/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 482/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 483/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 484/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 485/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 486/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 487/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 488/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 489/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 490/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 491/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 492/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 493/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 494/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0023 - accuracy: 1.0000\n",
      "Epoch 495/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0022 - accuracy: 1.0000\n",
      "Epoch 496/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0022 - accuracy: 1.0000\n",
      "Epoch 497/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0022 - accuracy: 1.0000\n",
      "Epoch 498/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0022 - accuracy: 1.0000\n",
      "Epoch 499/500\n",
      "7/7 [==============================] - 0s 1ms/step - loss: 0.0022 - accuracy: 1.0000\n",
      "Epoch 500/500\n",
      "7/7 [==============================] - 0s 2ms/step - loss: 0.0022 - accuracy: 1.0000\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(x_data, y_data,  batch_size=1, epochs=500)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 학습 결과 그려보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'epoch')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['loss'])\n",
    "plt.title('Loss')\n",
    "plt.xlabel('epoch')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'epoch')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['accuracy'])\n",
    "plt.title('Training accuracy')\n",
    "plt.xlabel('epoch')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  확률 찍어보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 87
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13021,
     "status": "ok",
     "timestamp": 1592362199099,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "N-TJgCw2LZd9",
    "outputId": "b3f99310-3279-45ea-e9c5-169b54903717"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.99865806]\n",
      " [0.9989378 ]\n",
      " [0.9967211 ]\n",
      " [0.9983057 ]\n",
      " [0.00329722]\n",
      " [0.00239745]\n",
      " [0.00239295]]\n"
     ]
    }
   ],
   "source": [
    "hypothesis = model.predict(x_data)\n",
    "print(hypothesis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 87
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13015,
     "status": "ok",
     "timestamp": 1592362199099,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "8Rv3IPOWLZeA",
    "outputId": "04b84803-254d-4257-dc78-1af190fb040f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ True]\n",
      " [ True]\n",
      " [ True]\n",
      " [ True]\n",
      " [False]\n",
      " [False]\n",
      " [False]]\n"
     ]
    }
   ],
   "source": [
    "predicted = hypothesis > 0.5\n",
    "print(predicted)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "10_4_XOR_keras.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}

{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Vq7s15gULZdl"
   },
   "source": [
    "## XOR 이해하기 with Keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tensorflow와 tf.keras를 임포트합니다\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.3.0'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 헬퍼(helper) 라이브러리를 임포트합니다\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Remember !! XOR : 모두 같으면 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "IoelahN_LZdr"
   },
   "outputs": [],
   "source": [
    "x_data = [[0, 0],\n",
    "          [0, 1],\n",
    "          [1, 0],\n",
    "          [1, 1]]\n",
    "\n",
    "y_data = [0,\n",
    "          1,\n",
    "          1,\n",
    "          0]\n",
    "\n",
    "x_data = np.array(x_data, dtype=np.float32)\n",
    "y_data = np.array(y_data, dtype=np.float32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f239b8c6d68>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_data[:, 0], x_data[:, 1], c=y_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras import layers\n",
    "from tensorflow.keras import activations\n",
    "from tensorflow.keras import optimizers\n",
    "from tensorflow.keras import models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "BDYUrlwjLZdu"
   },
   "outputs": [],
   "source": [
    "model = models.Sequential()\n",
    "model.add(layers.Dense(2, input_dim=2))\n",
    "model.add(layers.Activation('tanh'))\n",
    "#model.add(layers.Dense(2)) # comment out\n",
    "#model.add(layers.Activation('tanh')) # comment out\n",
    "model.add(layers.Dense(1))\n",
    "model.add(layers.Activation('sigmoid'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "7VDKvdsILZdx"
   },
   "outputs": [],
   "source": [
    "sgd = optimizers.SGD(lr=0.1)\n",
    "model.compile(loss='binary_crossentropy', optimizer=sgd, metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 301
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 2623,
     "status": "ok",
     "timestamp": 1592362188687,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "CTK36JUaLZd0",
    "outputId": "7feb840b-68da-423e-8730-6c235258bdc8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense (Dense)                (None, 2)                 6         \n",
      "_________________________________________________________________\n",
      "activation (Activation)      (None, 2)                 0         \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 1)                 3         \n",
      "_________________________________________________________________\n",
      "activation_1 (Activation)    (None, 1)                 0         \n",
      "=================================================================\n",
      "Total params: 9\n",
      "Trainable params: 9\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 533
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 3098,
     "status": "ok",
     "timestamp": 1592362189164,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "WdySYYryLZd3",
    "outputId": "83929205-5deb-44d8-a782-32ecc7b70e06"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from tensorflow.keras.utils import plot_model\n",
    "plot_model(model, to_file='model_xor.png', show_shapes=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13026,
     "status": "ok",
     "timestamp": 1592362199098,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "2sgcfuNBLZd6",
    "outputId": "15596330-c896-4d2f-c2ed-032c9c5b03a8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7831 - accuracy: 0.2500\n",
      "Epoch 2/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7738 - accuracy: 0.2500\n",
      "Epoch 3/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7675 - accuracy: 0.2500\n",
      "Epoch 4/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7617 - accuracy: 0.2500\n",
      "Epoch 5/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7540 - accuracy: 0.2500\n",
      "Epoch 6/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7511 - accuracy: 0.2500\n",
      "Epoch 7/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7458 - accuracy: 0.5000\n",
      "Epoch 8/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7403 - accuracy: 0.5000\n",
      "Epoch 9/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7381 - accuracy: 0.2500\n",
      "Epoch 10/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7344 - accuracy: 0.2500\n",
      "Epoch 11/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7307 - accuracy: 0.5000\n",
      "Epoch 12/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7271 - accuracy: 0.7500\n",
      "Epoch 13/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7239 - accuracy: 0.2500\n",
      "Epoch 14/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7200 - accuracy: 0.7500\n",
      "Epoch 15/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7152 - accuracy: 0.5000\n",
      "Epoch 16/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7136 - accuracy: 0.5000\n",
      "Epoch 17/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7085 - accuracy: 0.5000\n",
      "Epoch 18/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7074 - accuracy: 0.5000\n",
      "Epoch 19/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.7026 - accuracy: 0.7500\n",
      "Epoch 20/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.7002 - accuracy: 0.5000\n",
      "Epoch 21/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6985 - accuracy: 0.7500\n",
      "Epoch 22/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6954 - accuracy: 0.5000\n",
      "Epoch 23/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6913 - accuracy: 0.7500\n",
      "Epoch 24/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6902 - accuracy: 0.7500\n",
      "Epoch 25/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6877 - accuracy: 0.7500\n",
      "Epoch 26/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6835 - accuracy: 0.5000\n",
      "Epoch 27/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6823 - accuracy: 0.7500\n",
      "Epoch 28/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6791 - accuracy: 0.7500\n",
      "Epoch 29/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6768 - accuracy: 0.7500\n",
      "Epoch 30/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6724 - accuracy: 0.7500\n",
      "Epoch 31/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6699 - accuracy: 0.7500\n",
      "Epoch 32/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6675 - accuracy: 0.5000\n",
      "Epoch 33/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6660 - accuracy: 0.7500\n",
      "Epoch 34/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6635 - accuracy: 0.7500\n",
      "Epoch 35/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6594 - accuracy: 0.7500\n",
      "Epoch 36/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6577 - accuracy: 0.7500\n",
      "Epoch 37/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6541 - accuracy: 0.5000\n",
      "Epoch 38/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6516 - accuracy: 0.7500\n",
      "Epoch 39/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6499 - accuracy: 0.7500\n",
      "Epoch 40/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6478 - accuracy: 0.7500\n",
      "Epoch 41/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6438 - accuracy: 0.5000\n",
      "Epoch 42/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6420 - accuracy: 0.7500\n",
      "Epoch 43/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6398 - accuracy: 0.7500\n",
      "Epoch 44/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6371 - accuracy: 0.7500\n",
      "Epoch 45/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6333 - accuracy: 0.7500\n",
      "Epoch 46/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6320 - accuracy: 0.7500\n",
      "Epoch 47/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6289 - accuracy: 0.7500\n",
      "Epoch 48/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6262 - accuracy: 0.7500\n",
      "Epoch 49/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6240 - accuracy: 0.7500\n",
      "Epoch 50/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6209 - accuracy: 0.7500\n",
      "Epoch 51/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6187 - accuracy: 0.7500\n",
      "Epoch 52/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6149 - accuracy: 0.7500\n",
      "Epoch 53/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.6129 - accuracy: 0.7500\n",
      "Epoch 54/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6104 - accuracy: 0.7500\n",
      "Epoch 55/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6080 - accuracy: 0.7500\n",
      "Epoch 56/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6055 - accuracy: 0.7500\n",
      "Epoch 57/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6019 - accuracy: 0.7500\n",
      "Epoch 58/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.6001 - accuracy: 0.7500\n",
      "Epoch 59/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5982 - accuracy: 0.7500\n",
      "Epoch 60/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5958 - accuracy: 0.7500\n",
      "Epoch 61/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5921 - accuracy: 0.7500\n",
      "Epoch 62/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5905 - accuracy: 0.7500\n",
      "Epoch 63/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5875 - accuracy: 0.7500\n",
      "Epoch 64/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5855 - accuracy: 0.7500\n",
      "Epoch 65/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5825 - accuracy: 0.7500\n",
      "Epoch 66/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5801 - accuracy: 0.7500\n",
      "Epoch 67/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5791 - accuracy: 0.7500\n",
      "Epoch 68/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5761 - accuracy: 0.7500\n",
      "Epoch 69/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5745 - accuracy: 0.7500\n",
      "Epoch 70/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5711 - accuracy: 0.7500\n",
      "Epoch 71/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5700 - accuracy: 0.7500\n",
      "Epoch 72/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5679 - accuracy: 0.7500\n",
      "Epoch 73/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5651 - accuracy: 0.7500\n",
      "Epoch 74/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5627 - accuracy: 0.7500\n",
      "Epoch 75/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5605 - accuracy: 0.7500\n",
      "Epoch 76/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5589 - accuracy: 0.7500\n",
      "Epoch 77/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5573 - accuracy: 0.7500\n",
      "Epoch 78/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5555 - accuracy: 0.7500\n",
      "Epoch 79/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5523 - accuracy: 0.7500\n",
      "Epoch 80/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5503 - accuracy: 0.7500\n",
      "Epoch 81/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5490 - accuracy: 0.7500\n",
      "Epoch 82/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5472 - accuracy: 0.7500\n",
      "Epoch 83/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5450 - accuracy: 0.7500\n",
      "Epoch 84/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5441 - accuracy: 0.7500\n",
      "Epoch 85/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5417 - accuracy: 0.7500\n",
      "Epoch 86/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5395 - accuracy: 0.7500\n",
      "Epoch 87/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5379 - accuracy: 0.7500\n",
      "Epoch 88/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5356 - accuracy: 0.7500\n",
      "Epoch 89/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5349 - accuracy: 0.7500\n",
      "Epoch 90/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5326 - accuracy: 0.7500\n",
      "Epoch 91/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5314 - accuracy: 0.7500\n",
      "Epoch 92/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5287 - accuracy: 0.7500\n",
      "Epoch 93/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5279 - accuracy: 0.7500\n",
      "Epoch 94/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5250 - accuracy: 0.7500\n",
      "Epoch 95/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5238 - accuracy: 0.7500\n",
      "Epoch 96/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5229 - accuracy: 0.7500\n",
      "Epoch 97/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5214 - accuracy: 0.7500\n",
      "Epoch 98/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5186 - accuracy: 0.7500\n",
      "Epoch 99/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5167 - accuracy: 0.7500\n",
      "Epoch 100/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5155 - accuracy: 0.7500\n",
      "Epoch 101/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5140 - accuracy: 0.7500\n",
      "Epoch 102/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5131 - accuracy: 0.7500\n",
      "Epoch 103/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5106 - accuracy: 0.7500\n",
      "Epoch 104/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5092 - accuracy: 0.7500\n",
      "Epoch 105/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5071 - accuracy: 0.7500\n",
      "Epoch 106/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5062 - accuracy: 0.7500\n",
      "Epoch 107/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.5055 - accuracy: 0.7500\n",
      "Epoch 108/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5032 - accuracy: 0.7500\n",
      "Epoch 109/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5024 - accuracy: 0.7500\n",
      "Epoch 110/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.5010 - accuracy: 0.7500\n",
      "Epoch 111/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4987 - accuracy: 0.7500\n",
      "Epoch 112/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4980 - accuracy: 0.7500\n",
      "Epoch 113/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4952 - accuracy: 0.7500\n",
      "Epoch 114/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4945 - accuracy: 0.7500\n",
      "Epoch 115/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4921 - accuracy: 0.7500\n",
      "Epoch 116/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4915 - accuracy: 0.7500\n",
      "Epoch 117/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4894 - accuracy: 0.7500\n",
      "Epoch 118/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4888 - accuracy: 0.7500\n",
      "Epoch 119/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4879 - accuracy: 0.7500\n",
      "Epoch 120/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4851 - accuracy: 0.7500\n",
      "Epoch 121/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4838 - accuracy: 0.7500\n",
      "Epoch 122/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4828 - accuracy: 0.7500\n",
      "Epoch 123/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4814 - accuracy: 0.7500\n",
      "Epoch 124/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4808 - accuracy: 0.7500\n",
      "Epoch 125/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4784 - accuracy: 0.7500\n",
      "Epoch 126/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4780 - accuracy: 0.7500\n",
      "Epoch 127/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4767 - accuracy: 0.7500\n",
      "Epoch 128/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4753 - accuracy: 0.7500\n",
      "Epoch 129/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4730 - accuracy: 0.7500\n",
      "Epoch 130/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4715 - accuracy: 0.7500\n",
      "Epoch 131/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4702 - accuracy: 0.7500\n",
      "Epoch 132/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4698 - accuracy: 0.7500\n",
      "Epoch 133/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4675 - accuracy: 0.7500\n",
      "Epoch 134/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4657 - accuracy: 0.7500\n",
      "Epoch 135/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4651 - accuracy: 0.7500\n",
      "Epoch 136/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4627 - accuracy: 0.7500\n",
      "Epoch 137/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4624 - accuracy: 0.7500\n",
      "Epoch 138/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4604 - accuracy: 0.7500\n",
      "Epoch 139/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4593 - accuracy: 0.7500\n",
      "Epoch 140/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4572 - accuracy: 0.7500\n",
      "Epoch 141/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4547 - accuracy: 0.7500\n",
      "Epoch 142/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4544 - accuracy: 0.7500\n",
      "Epoch 143/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4526 - accuracy: 0.7500\n",
      "Epoch 144/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4507 - accuracy: 0.7500\n",
      "Epoch 145/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4490 - accuracy: 0.7500\n",
      "Epoch 146/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4462 - accuracy: 0.7500\n",
      "Epoch 147/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4444 - accuracy: 0.7500\n",
      "Epoch 148/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4436 - accuracy: 0.7500\n",
      "Epoch 149/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4415 - accuracy: 0.7500\n",
      "Epoch 150/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4392 - accuracy: 0.7500\n",
      "Epoch 151/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4367 - accuracy: 0.7500\n",
      "Epoch 152/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4337 - accuracy: 0.7500\n",
      "Epoch 153/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4325 - accuracy: 0.7500\n",
      "Epoch 154/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4296 - accuracy: 0.7500\n",
      "Epoch 155/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4254 - accuracy: 0.7500\n",
      "Epoch 156/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4232 - accuracy: 0.7500\n",
      "Epoch 157/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.4210 - accuracy: 0.7500\n",
      "Epoch 158/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4162 - accuracy: 0.7500\n",
      "Epoch 159/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4135 - accuracy: 0.7500\n",
      "Epoch 160/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4109 - accuracy: 0.7500\n",
      "Epoch 161/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4079 - accuracy: 0.7500\n",
      "Epoch 162/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.4031 - accuracy: 0.7500\n",
      "Epoch 163/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3993 - accuracy: 0.7500\n",
      "Epoch 164/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3967 - accuracy: 0.7500\n",
      "Epoch 165/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3908 - accuracy: 0.7500\n",
      "Epoch 166/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3880 - accuracy: 0.7500\n",
      "Epoch 167/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3791 - accuracy: 1.0000\n",
      "Epoch 168/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3770 - accuracy: 0.7500\n",
      "Epoch 169/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3721 - accuracy: 0.7500\n",
      "Epoch 170/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3690 - accuracy: 0.7500\n",
      "Epoch 171/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.3626 - accuracy: 0.7500\n",
      "Epoch 172/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3580 - accuracy: 0.7500\n",
      "Epoch 173/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3535 - accuracy: 1.0000\n",
      "Epoch 174/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3439 - accuracy: 1.0000\n",
      "Epoch 175/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3414 - accuracy: 0.7500\n",
      "Epoch 176/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3341 - accuracy: 1.0000\n",
      "Epoch 177/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3313 - accuracy: 0.7500\n",
      "Epoch 178/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3274 - accuracy: 1.0000\n",
      "Epoch 179/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3177 - accuracy: 1.0000\n",
      "Epoch 180/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3162 - accuracy: 0.7500\n",
      "Epoch 181/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3119 - accuracy: 1.0000\n",
      "Epoch 182/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.3036 - accuracy: 1.0000\n",
      "Epoch 183/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2999 - accuracy: 1.0000\n",
      "Epoch 184/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2962 - accuracy: 1.0000\n",
      "Epoch 185/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2925 - accuracy: 1.0000\n",
      "Epoch 186/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2860 - accuracy: 1.0000\n",
      "Epoch 187/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2790 - accuracy: 1.0000\n",
      "Epoch 188/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2767 - accuracy: 1.0000\n",
      "Epoch 189/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2717 - accuracy: 1.0000\n",
      "Epoch 190/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2658 - accuracy: 1.0000\n",
      "Epoch 191/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2626 - accuracy: 1.0000\n",
      "Epoch 192/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2566 - accuracy: 1.0000\n",
      "Epoch 193/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2530 - accuracy: 1.0000\n",
      "Epoch 194/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2518 - accuracy: 1.0000\n",
      "Epoch 195/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2456 - accuracy: 1.0000\n",
      "Epoch 196/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2395 - accuracy: 1.0000\n",
      "Epoch 197/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2374 - accuracy: 1.0000\n",
      "Epoch 198/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2317 - accuracy: 1.0000\n",
      "Epoch 199/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2303 - accuracy: 1.0000\n",
      "Epoch 200/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2262 - accuracy: 1.0000\n",
      "Epoch 201/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2202 - accuracy: 1.0000\n",
      "Epoch 202/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2177 - accuracy: 1.0000\n",
      "Epoch 203/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2152 - accuracy: 1.0000\n",
      "Epoch 204/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.2095 - accuracy: 1.0000\n",
      "Epoch 205/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2082 - accuracy: 1.0000\n",
      "Epoch 206/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2045 - accuracy: 1.0000\n",
      "Epoch 207/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.2010 - accuracy: 1.0000\n",
      "Epoch 208/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1963 - accuracy: 1.0000\n",
      "Epoch 209/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1941 - accuracy: 1.0000\n",
      "Epoch 210/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1907 - accuracy: 1.0000\n",
      "Epoch 211/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1869 - accuracy: 1.0000\n",
      "Epoch 212/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1841 - accuracy: 1.0000\n",
      "Epoch 213/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1822 - accuracy: 1.0000\n",
      "Epoch 214/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1791 - accuracy: 1.0000\n",
      "Epoch 215/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1768 - accuracy: 1.0000\n",
      "Epoch 216/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1740 - accuracy: 1.0000\n",
      "Epoch 217/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1703 - accuracy: 1.0000\n",
      "Epoch 218/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1686 - accuracy: 1.0000\n",
      "Epoch 219/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1662 - accuracy: 1.0000\n",
      "Epoch 220/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1628 - accuracy: 1.0000\n",
      "Epoch 221/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1615 - accuracy: 1.0000\n",
      "Epoch 222/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1582 - accuracy: 1.0000\n",
      "Epoch 223/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1570 - accuracy: 1.0000\n",
      "Epoch 224/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1538 - accuracy: 1.0000\n",
      "Epoch 225/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1526 - accuracy: 1.0000\n",
      "Epoch 226/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1496 - accuracy: 1.0000\n",
      "Epoch 227/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1480 - accuracy: 1.0000\n",
      "Epoch 228/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1452 - accuracy: 1.0000\n",
      "Epoch 229/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1440 - accuracy: 1.0000\n",
      "Epoch 230/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1420 - accuracy: 1.0000\n",
      "Epoch 231/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1401 - accuracy: 1.0000\n",
      "Epoch 232/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1380 - accuracy: 1.0000\n",
      "Epoch 233/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1362 - accuracy: 1.0000\n",
      "Epoch 234/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1340 - accuracy: 1.0000\n",
      "Epoch 235/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1326 - accuracy: 1.0000\n",
      "Epoch 236/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1306 - accuracy: 1.0000\n",
      "Epoch 237/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1294 - accuracy: 1.0000\n",
      "Epoch 238/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1274 - accuracy: 1.0000\n",
      "Epoch 239/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1263 - accuracy: 1.0000\n",
      "Epoch 240/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1243 - accuracy: 1.0000\n",
      "Epoch 241/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1232 - accuracy: 1.0000\n",
      "Epoch 242/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1213 - accuracy: 1.0000\n",
      "Epoch 243/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1203 - accuracy: 1.0000\n",
      "Epoch 244/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1187 - accuracy: 1.0000\n",
      "Epoch 245/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1171 - accuracy: 1.0000\n",
      "Epoch 246/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.1159 - accuracy: 1.0000\n",
      "Epoch 247/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1145 - accuracy: 1.0000\n",
      "Epoch 248/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1132 - accuracy: 1.0000\n",
      "Epoch 249/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1118 - accuracy: 1.0000\n",
      "Epoch 250/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1103 - accuracy: 1.0000\n",
      "Epoch 251/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1093 - accuracy: 1.0000\n",
      "Epoch 252/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1081 - accuracy: 1.0000\n",
      "Epoch 253/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1067 - accuracy: 1.0000\n",
      "Epoch 254/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1058 - accuracy: 1.0000\n",
      "Epoch 255/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1044 - accuracy: 1.0000\n",
      "Epoch 256/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1033 - accuracy: 1.0000\n",
      "Epoch 257/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1024 - accuracy: 1.0000\n",
      "Epoch 258/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1013 - accuracy: 1.0000\n",
      "Epoch 259/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.1001 - accuracy: 1.0000\n",
      "Epoch 260/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0991 - accuracy: 1.0000\n",
      "Epoch 261/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0982 - accuracy: 1.0000\n",
      "Epoch 262/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0972 - accuracy: 1.0000\n",
      "Epoch 263/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0962 - accuracy: 1.0000\n",
      "Epoch 264/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0952 - accuracy: 1.0000\n",
      "Epoch 265/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0942 - accuracy: 1.0000\n",
      "Epoch 266/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0934 - accuracy: 1.0000\n",
      "Epoch 267/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0924 - accuracy: 1.0000\n",
      "Epoch 268/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0915 - accuracy: 1.0000\n",
      "Epoch 269/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0906 - accuracy: 1.0000\n",
      "Epoch 270/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0898 - accuracy: 1.0000\n",
      "Epoch 271/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0889 - accuracy: 1.0000\n",
      "Epoch 272/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0879 - accuracy: 1.0000\n",
      "Epoch 273/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0873 - accuracy: 1.0000\n",
      "Epoch 274/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0864 - accuracy: 1.0000\n",
      "Epoch 275/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0856 - accuracy: 1.0000\n",
      "Epoch 276/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0847 - accuracy: 1.0000\n",
      "Epoch 277/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0840 - accuracy: 1.0000\n",
      "Epoch 278/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0832 - accuracy: 1.0000\n",
      "Epoch 279/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0826 - accuracy: 1.0000\n",
      "Epoch 280/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0818 - accuracy: 1.0000\n",
      "Epoch 281/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0811 - accuracy: 1.0000\n",
      "Epoch 282/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0804 - accuracy: 1.0000\n",
      "Epoch 283/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0798 - accuracy: 1.0000\n",
      "Epoch 284/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0790 - accuracy: 1.0000\n",
      "Epoch 285/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0784 - accuracy: 1.0000\n",
      "Epoch 286/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0777 - accuracy: 1.0000\n",
      "Epoch 287/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0770 - accuracy: 1.0000\n",
      "Epoch 288/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0763 - accuracy: 1.0000\n",
      "Epoch 289/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0757 - accuracy: 1.0000\n",
      "Epoch 290/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0751 - accuracy: 1.0000\n",
      "Epoch 291/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0744 - accuracy: 1.0000\n",
      "Epoch 292/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0739 - accuracy: 1.0000\n",
      "Epoch 293/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0732 - accuracy: 1.0000\n",
      "Epoch 294/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0727 - accuracy: 1.0000\n",
      "Epoch 295/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0721 - accuracy: 1.0000\n",
      "Epoch 296/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0716 - accuracy: 1.0000\n",
      "Epoch 297/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0710 - accuracy: 1.0000\n",
      "Epoch 298/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0705 - accuracy: 1.0000\n",
      "Epoch 299/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0699 - accuracy: 1.0000\n",
      "Epoch 300/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0694 - accuracy: 1.0000\n",
      "Epoch 301/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0688 - accuracy: 1.0000\n",
      "Epoch 302/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0683 - accuracy: 1.0000\n",
      "Epoch 303/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0678 - accuracy: 1.0000\n",
      "Epoch 304/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0673 - accuracy: 1.0000\n",
      "Epoch 305/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0668 - accuracy: 1.0000\n",
      "Epoch 306/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0663 - accuracy: 1.0000\n",
      "Epoch 307/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0657 - accuracy: 1.0000\n",
      "Epoch 308/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0653 - accuracy: 1.0000\n",
      "Epoch 309/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0648 - accuracy: 1.0000\n",
      "Epoch 310/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0643 - accuracy: 1.0000\n",
      "Epoch 311/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0639 - accuracy: 1.0000\n",
      "Epoch 312/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0634 - accuracy: 1.0000\n",
      "Epoch 313/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0630 - accuracy: 1.0000\n",
      "Epoch 314/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0626 - accuracy: 1.0000\n",
      "Epoch 315/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0621 - accuracy: 1.0000\n",
      "Epoch 316/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0617 - accuracy: 1.0000\n",
      "Epoch 317/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0612 - accuracy: 1.0000\n",
      "Epoch 318/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0608 - accuracy: 1.0000\n",
      "Epoch 319/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0604 - accuracy: 1.0000\n",
      "Epoch 320/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0600 - accuracy: 1.0000\n",
      "Epoch 321/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0596 - accuracy: 1.0000\n",
      "Epoch 322/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0592 - accuracy: 1.0000\n",
      "Epoch 323/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0588 - accuracy: 1.0000\n",
      "Epoch 324/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0584 - accuracy: 1.0000\n",
      "Epoch 325/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0580 - accuracy: 1.0000\n",
      "Epoch 326/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0577 - accuracy: 1.0000\n",
      "Epoch 327/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0573 - accuracy: 1.0000\n",
      "Epoch 328/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0569 - accuracy: 1.0000\n",
      "Epoch 329/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0565 - accuracy: 1.0000\n",
      "Epoch 330/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0562 - accuracy: 1.0000\n",
      "Epoch 331/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0558 - accuracy: 1.0000\n",
      "Epoch 332/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0555 - accuracy: 1.0000\n",
      "Epoch 333/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0551 - accuracy: 1.0000\n",
      "Epoch 334/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0548 - accuracy: 1.0000\n",
      "Epoch 335/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0544 - accuracy: 1.0000\n",
      "Epoch 336/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0541 - accuracy: 1.0000\n",
      "Epoch 337/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0537 - accuracy: 1.0000\n",
      "Epoch 338/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0534 - accuracy: 1.0000\n",
      "Epoch 339/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0531 - accuracy: 1.0000\n",
      "Epoch 340/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0528 - accuracy: 1.0000\n",
      "Epoch 341/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0525 - accuracy: 1.0000\n",
      "Epoch 342/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0522 - accuracy: 1.0000\n",
      "Epoch 343/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0518 - accuracy: 1.0000\n",
      "Epoch 344/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0515 - accuracy: 1.0000\n",
      "Epoch 345/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0512 - accuracy: 1.0000\n",
      "Epoch 346/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0509 - accuracy: 1.0000\n",
      "Epoch 347/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0506 - accuracy: 1.0000\n",
      "Epoch 348/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0503 - accuracy: 1.0000\n",
      "Epoch 349/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0500 - accuracy: 1.0000\n",
      "Epoch 350/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0498 - accuracy: 1.0000\n",
      "Epoch 351/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0495 - accuracy: 1.0000\n",
      "Epoch 352/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0492 - accuracy: 1.0000\n",
      "Epoch 353/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0489 - accuracy: 1.0000\n",
      "Epoch 354/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0486 - accuracy: 1.0000\n",
      "Epoch 355/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0484 - accuracy: 1.0000\n",
      "Epoch 356/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0481 - accuracy: 1.0000\n",
      "Epoch 357/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0478 - accuracy: 1.0000\n",
      "Epoch 358/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0476 - accuracy: 1.0000\n",
      "Epoch 359/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0473 - accuracy: 1.0000\n",
      "Epoch 360/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0470 - accuracy: 1.0000\n",
      "Epoch 361/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0468 - accuracy: 1.0000\n",
      "Epoch 362/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0465 - accuracy: 1.0000\n",
      "Epoch 363/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0463 - accuracy: 1.0000\n",
      "Epoch 364/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0460 - accuracy: 1.0000\n",
      "Epoch 365/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0458 - accuracy: 1.0000\n",
      "Epoch 366/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0456 - accuracy: 1.0000\n",
      "Epoch 367/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0453 - accuracy: 1.0000\n",
      "Epoch 368/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0451 - accuracy: 1.0000\n",
      "Epoch 369/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0448 - accuracy: 1.0000\n",
      "Epoch 370/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0446 - accuracy: 1.0000\n",
      "Epoch 371/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0444 - accuracy: 1.0000\n",
      "Epoch 372/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0441 - accuracy: 1.0000\n",
      "Epoch 373/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0439 - accuracy: 1.0000\n",
      "Epoch 374/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0437 - accuracy: 1.0000\n",
      "Epoch 375/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0435 - accuracy: 1.0000\n",
      "Epoch 376/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0433 - accuracy: 1.0000\n",
      "Epoch 377/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0430 - accuracy: 1.0000\n",
      "Epoch 378/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0428 - accuracy: 1.0000\n",
      "Epoch 379/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0426 - accuracy: 1.0000\n",
      "Epoch 380/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0424 - accuracy: 1.0000\n",
      "Epoch 381/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0422 - accuracy: 1.0000\n",
      "Epoch 382/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0420 - accuracy: 1.0000\n",
      "Epoch 383/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0418 - accuracy: 1.0000\n",
      "Epoch 384/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0416 - accuracy: 1.0000\n",
      "Epoch 385/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0414 - accuracy: 1.0000\n",
      "Epoch 386/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0412 - accuracy: 1.0000\n",
      "Epoch 387/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0410 - accuracy: 1.0000\n",
      "Epoch 388/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0408 - accuracy: 1.0000\n",
      "Epoch 389/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0406 - accuracy: 1.0000\n",
      "Epoch 390/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0404 - accuracy: 1.0000\n",
      "Epoch 391/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0402 - accuracy: 1.0000\n",
      "Epoch 392/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0400 - accuracy: 1.0000\n",
      "Epoch 393/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0398 - accuracy: 1.0000\n",
      "Epoch 394/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0396 - accuracy: 1.0000\n",
      "Epoch 395/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0394 - accuracy: 1.0000\n",
      "Epoch 396/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0393 - accuracy: 1.0000\n",
      "Epoch 397/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0391 - accuracy: 1.0000\n",
      "Epoch 398/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0389 - accuracy: 1.0000\n",
      "Epoch 399/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0387 - accuracy: 1.0000\n",
      "Epoch 400/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0385 - accuracy: 1.0000\n",
      "Epoch 401/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0384 - accuracy: 1.0000\n",
      "Epoch 402/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0382 - accuracy: 1.0000\n",
      "Epoch 403/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0380 - accuracy: 1.0000\n",
      "Epoch 404/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0379 - accuracy: 1.0000\n",
      "Epoch 405/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0377 - accuracy: 1.0000\n",
      "Epoch 406/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0375 - accuracy: 1.0000\n",
      "Epoch 407/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0373 - accuracy: 1.0000\n",
      "Epoch 408/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0372 - accuracy: 1.0000\n",
      "Epoch 409/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0370 - accuracy: 1.0000\n",
      "Epoch 410/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0369 - accuracy: 1.0000\n",
      "Epoch 411/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0367 - accuracy: 1.0000\n",
      "Epoch 412/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0365 - accuracy: 1.0000\n",
      "Epoch 413/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0364 - accuracy: 1.0000\n",
      "Epoch 414/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0362 - accuracy: 1.0000\n",
      "Epoch 415/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0361 - accuracy: 1.0000\n",
      "Epoch 416/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0359 - accuracy: 1.0000\n",
      "Epoch 417/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0358 - accuracy: 1.0000\n",
      "Epoch 418/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0356 - accuracy: 1.0000\n",
      "Epoch 419/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0355 - accuracy: 1.0000\n",
      "Epoch 420/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0353 - accuracy: 1.0000\n",
      "Epoch 421/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0352 - accuracy: 1.0000\n",
      "Epoch 422/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0350 - accuracy: 1.0000\n",
      "Epoch 423/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0349 - accuracy: 1.0000\n",
      "Epoch 424/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0347 - accuracy: 1.0000\n",
      "Epoch 425/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0346 - accuracy: 1.0000\n",
      "Epoch 426/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0344 - accuracy: 1.0000\n",
      "Epoch 427/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0343 - accuracy: 1.0000\n",
      "Epoch 428/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0342 - accuracy: 1.0000\n",
      "Epoch 429/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0340 - accuracy: 1.0000\n",
      "Epoch 430/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0339 - accuracy: 1.0000\n",
      "Epoch 431/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0338 - accuracy: 1.0000\n",
      "Epoch 432/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0336 - accuracy: 1.0000\n",
      "Epoch 433/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0335 - accuracy: 1.0000\n",
      "Epoch 434/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0334 - accuracy: 1.0000\n",
      "Epoch 435/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0332 - accuracy: 1.0000\n",
      "Epoch 436/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0331 - accuracy: 1.0000\n",
      "Epoch 437/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0330 - accuracy: 1.0000\n",
      "Epoch 438/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0328 - accuracy: 1.0000\n",
      "Epoch 439/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0327 - accuracy: 1.0000\n",
      "Epoch 440/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0326 - accuracy: 1.0000\n",
      "Epoch 441/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0324 - accuracy: 1.0000\n",
      "Epoch 442/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0323 - accuracy: 1.0000\n",
      "Epoch 443/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0322 - accuracy: 1.0000\n",
      "Epoch 444/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0321 - accuracy: 1.0000\n",
      "Epoch 445/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0319 - accuracy: 1.0000\n",
      "Epoch 446/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0318 - accuracy: 1.0000\n",
      "Epoch 447/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0317 - accuracy: 1.0000\n",
      "Epoch 448/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0316 - accuracy: 1.0000\n",
      "Epoch 449/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0315 - accuracy: 1.0000\n",
      "Epoch 450/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0313 - accuracy: 1.0000\n",
      "Epoch 451/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0312 - accuracy: 1.0000\n",
      "Epoch 452/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0311 - accuracy: 1.0000\n",
      "Epoch 453/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0310 - accuracy: 1.0000\n",
      "Epoch 454/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0309 - accuracy: 1.0000\n",
      "Epoch 455/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0308 - accuracy: 1.0000\n",
      "Epoch 456/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0307 - accuracy: 1.0000\n",
      "Epoch 457/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0305 - accuracy: 1.0000\n",
      "Epoch 458/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0304 - accuracy: 1.0000\n",
      "Epoch 459/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0303 - accuracy: 1.0000\n",
      "Epoch 460/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0302 - accuracy: 1.0000\n",
      "Epoch 461/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0301 - accuracy: 1.0000\n",
      "Epoch 462/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0300 - accuracy: 1.0000\n",
      "Epoch 463/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0299 - accuracy: 1.0000\n",
      "Epoch 464/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0298 - accuracy: 1.0000\n",
      "Epoch 465/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0297 - accuracy: 1.0000\n",
      "Epoch 466/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0296 - accuracy: 1.0000\n",
      "Epoch 467/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0295 - accuracy: 1.0000\n",
      "Epoch 468/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0294 - accuracy: 1.0000\n",
      "Epoch 469/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0293 - accuracy: 1.0000\n",
      "Epoch 470/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0292 - accuracy: 1.0000\n",
      "Epoch 471/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0290 - accuracy: 1.0000\n",
      "Epoch 472/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0289 - accuracy: 1.0000\n",
      "Epoch 473/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0288 - accuracy: 1.0000\n",
      "Epoch 474/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0287 - accuracy: 1.0000\n",
      "Epoch 475/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0286 - accuracy: 1.0000\n",
      "Epoch 476/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0285 - accuracy: 1.0000\n",
      "Epoch 477/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0285 - accuracy: 1.0000\n",
      "Epoch 478/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0284 - accuracy: 1.0000\n",
      "Epoch 479/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0283 - accuracy: 1.0000\n",
      "Epoch 480/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0282 - accuracy: 1.0000\n",
      "Epoch 481/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0281 - accuracy: 1.0000\n",
      "Epoch 482/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0280 - accuracy: 1.0000\n",
      "Epoch 483/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0279 - accuracy: 1.0000\n",
      "Epoch 484/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0278 - accuracy: 1.0000\n",
      "Epoch 485/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0277 - accuracy: 1.0000\n",
      "Epoch 486/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0276 - accuracy: 1.0000\n",
      "Epoch 487/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0275 - accuracy: 1.0000\n",
      "Epoch 488/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0274 - accuracy: 1.0000\n",
      "Epoch 489/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0273 - accuracy: 1.0000\n",
      "Epoch 490/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0272 - accuracy: 1.0000\n",
      "Epoch 491/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0271 - accuracy: 1.0000\n",
      "Epoch 492/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0271 - accuracy: 1.0000\n",
      "Epoch 493/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0270 - accuracy: 1.0000\n",
      "Epoch 494/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0269 - accuracy: 1.0000\n",
      "Epoch 495/500\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0268 - accuracy: 1.0000\n",
      "Epoch 496/500\n",
      "4/4 [==============================] - 0s 1ms/step - loss: 0.0267 - accuracy: 1.0000\n",
      "Epoch 497/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0266 - accuracy: 1.0000\n",
      "Epoch 498/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0265 - accuracy: 1.0000\n",
      "Epoch 499/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0264 - accuracy: 1.0000\n",
      "Epoch 500/500\n",
      "4/4 [==============================] - 0s 2ms/step - loss: 0.0264 - accuracy: 1.0000\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(x_data, y_data,  batch_size=1, epochs=500)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 학습 결과 그려보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'epoch')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['loss'])\n",
    "plt.title('Loss')\n",
    "plt.xlabel('epoch')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'epoch')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['accuracy'])\n",
    "plt.title('Training accuracy')\n",
    "plt.xlabel('epoch')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  확률 찍어보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 87
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13021,
     "status": "ok",
     "timestamp": 1592362199099,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "N-TJgCw2LZd9",
    "outputId": "b3f99310-3279-45ea-e9c5-169b54903717"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.03096818]\n",
      " [0.981488  ]\n",
      " [0.98172015]\n",
      " [0.03512011]]\n"
     ]
    }
   ],
   "source": [
    "hypothesis = model.predict(x_data)\n",
    "print(hypothesis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 87
    },
    "colab_type": "code",
    "executionInfo": {
     "elapsed": 13015,
     "status": "ok",
     "timestamp": 1592362199099,
     "user": {
      "displayName": "Seung-Chan Kim",
      "photoUrl": "https://lh3.googleusercontent.com/a-/AOh14GjjUCpGdfqBzlivlOvEe4i1Dj062MbvwEmvnGyn=s64",
      "userId": "16393552909587516870"
     },
     "user_tz": -540
    },
    "id": "8Rv3IPOWLZeA",
    "outputId": "04b84803-254d-4257-dc78-1af190fb040f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[False]\n",
      " [ True]\n",
      " [ True]\n",
      " [False]]\n"
     ]
    }
   ],
   "source": [
    "predicted = hypothesis > 0.5\n",
    "print(predicted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 생각해보기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* XOR 분류에서 정확도 75의 의미는?"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "10_4_XOR_keras.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
